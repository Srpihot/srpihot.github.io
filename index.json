[{"content":"前言 本文主要用于总结计算机网络相关知识与细节，相对于本科软工所学的计网基础，还会更新不同厂商与配置信息。借鉴CyC2018/CS-Notes计算机网络部分，在此基础上进行扩展与总结。\n目录 概述 物理层 数据链路层 网络层 传输层 应用层 参考文献 概述 什么是计算机网络 就是利用通信设备和线路将地理位置不同的、功能独立的多个计算机系统互连起来，以功能完善的网络软件(即网络通信协议、信息交换方式、网络操作系统等)实现网络中资源共享和信息传递的系统。 计算机网络的组成：\n 边缘部分由所有连接在因特网上的主机组成。这部分是用户直接使用的，用来 进行通信(传送数据、音频或视频)和资源共享。 核心部分由大量网络和连接这些网络的路由器组成。这部分是为边缘部分提供 服务的(提供连通性和交换)。  计算机网络分类：\n 作用范围：  广域网 WAN 城域网 MAN 局域网 LAN 个人区域网 PAN   依据网络使用者：  公用网 专用网   依据网络拓扑结构：  总线形 星型 环形 树形 网形    什么是ISP? 互联网服务提供商 ISP 可以从互联网管理机构获得许多 IP 地址，同时拥有通信线路以及路由器等联网设备，个人或机构向 ISP 缴纳一定的费用就可以接入互联网。\n目前的互联网是一种多层次 ISP 结构，ISP 根据覆盖面积的大小分为第一层 ISP、区域 ISP 和接入 ISP。互联网交换点 IXP 允许两个 ISP 直接相连而不用经过第三个 ISP。\n不同主机间通信方式：   客户-服务器（C/S）：客户是服务的请求方，服务器是服务的提供方。\n  对等（P2P）：不区分客户和服务器。\n  数据传输方式  电路交换  ​\t电路交换用于电话通信系统，两个用户要通信之前需要建立一条专用的物理链路，并且在整个通信过程中始终占用该链路。由于通信的过程中不可能一直在使用传输线路，因此电路交换对线路的利用率很低，往往不到 10%。\n  报文交换\n数据交换的单位是报文，报文携带有目的地址、源地址等信息。报文交换在交换节点采用存储转发的传输方式。\n  分组交换\n每个分组都有首部和尾部，包含了源地址和目的地址等控制信息，在同一个传输线路上同时传输多个分组互相不会影响，因此在同一条传输线路上允许同时传输多个分组，也就是说分组交换不需要占用传输线路。分组中分为数据报与虚电路两种方式。\n  数据报：\n高层协议会将报文拆分成若干带有序号和完整目的地址的分组，交换机根据转发表转发分组。\n  虚电路：\n虛电路方式要求在发送数据之前，在源主机和目的主机之间建立一条虚连接。一旦虚连接建立以后，用户发送的数据( 以分组为单位)将通过该路径按顺序传送到达目的主机。当通信完成之后用户发出释放虚电路请求，由网络清除该虚连接。\n  在一个邮局通信系统中，邮局收到一份邮件之后，先存储下来，然后把相同目的地的邮件一起转发到下一个目的地，这个过程就是存储转发过程，分组交换也使用了存储转发过程。\n   报文与分组的区别：\n简单的理解就是，把报文进行分组，然后每一组分别进行发送，最后再到目的主机进行组装成一个完整报文，这个过程是分组交换，而报文交换则是不讲报文分组，直接发送报文。\n 时延 总时延 = 排队时延 + 处理时延 + 传输时延 + 传播时延\n 排队时延  分组在路由器的输入队列和输出队列中排队等待的时间，取决于网络当前的通信量。\n 处理时延  主机或路由器收到分组时进行处理所需要的时间，例如分析首部、从分组中提取数据、进行差错检验或查找适当的路由等。\n 传输时延  主机或路由器传输数据帧所需要的时间。\n其中 l 表示数据帧的长度，v 表示传输速率。\n 传播时延  电磁波在信道中传播所需要花费的时间，电磁波传播的速度接近光速。\n其中 l 表示信道长度，v 表示电磁波在信道上的传播速度。\n计算机网络体系结构   五层协议\n  应用层 ：为特定应用程序提供数据传输服务，例如 HTTP、DNS 等协议。数据单位为报文。\n  传输层 ：为进程提供通用数据传输服务。也称为运输层。由于应用层协议很多，定义通用的传输层协议就可以支持不断增多的应用层协议。运输层包括两种协议：传输控制协议 TCP，提供面向连接、可靠的数据传输服务，数据单位为报文段；用户数据报协议 UDP，提供无连接、尽最大努力的数据传输服务，数据单位为用户数据报。TCP 主要提供完整性服务，UDP 主要提供及时性服务。\n  网络层 ：为主机提供数据传输服务。而传输层协议是为主机中的进程提供数据传输服务。网络层把传输层传递下来的报文段或者用户数据报封装成分组。\n  数据链路层 ：网络层针对的还是主机之间的数据传输服务，而主机之间可以有很多链路，链路层协议就是为同一链路的主机提供数据传输服务。数据链路层把网络层传下来的分组封装成帧。\n  物理层 ：考虑的是怎样在传输媒体上传输数据比特流，而不是指具体的传输媒体。物理层的作用是尽可能屏蔽传输媒体和通信手段的差异，使数据链路层感觉不到这些差异。\n    OSI\n  ​\t其中表示层和会话层用途如下：\n 会话层:允许不同机器上的用户建立会话关系，提供对某些应用有用的增强服务会话，可被用于远程登录到分时系统或在两台机器间传递文件等应用中。管理对话和同步。在数据流中插入校验点。每次网络崩溃后，仅需要重传最后一个校验点以后的数据。 表示层:数据压缩、加密以及数据描述，这使得应用程序不必关心在各台主机中数据内部格式不同的问题。关心的是面向应用的信息的语法和语义。典型的例子是用一种大家一致同意的标准方法对数据编码。为了让采用不同表示法的计算机之间能进行通信，交换中使用的数据结构可以用抽象的方式来定义，并且使用标准的编码方式。表示层管理这些抽象数据结构，并且在计算机内部表示法和网络的标准表示法之间进行转换。  五层协议没有表示层和会话层，而是将这些功能留给应用程序开发者处理。\n TCP/IP  它只有四层，相当于五层协议中数据链路层和物理层合并为网络接口层。\nTCP/IP 体系结构不严格遵循 OSI 分层概念，应用层可能会直接使用 IP 层或者网络接口层。\n 数据在各层之间的传递过程  在向下的过程中，需要添加下层协议所需要的首部或者尾部，而在向上的过程中不断拆开首部和尾部。\n路由器只有下面三层协议，因为路由器位于网络核心中，不需要为进程或者应用程序提供服务，因此也就不需要传输层和应用层。\n物理层 通信方式 根据信息在传输线上的传送方向，分为以下三种通信方式：\n 单工通信：单向传输 半双工通信：双向交替传输 全双工通信：双向同时传输  带通调制 模拟信号是连续的信号，数字信号是离散的信号。带通调制把数字信号转换为模拟信号。\n 调幅(AM):载波的振幅随基带数字信号而变化。 调频(FM):载波的频率随基带数字信号而变化。. 调相(PM):载波的初始相位随基带数字信号而变化。  奈奎斯特与香农定理   奈奎斯特(Nyquist)无噪声下的码元速率极限值B与信道带宽H的关系:\n  最大数据传输率B = 2 × H 波特(Baud).\n  奈奎斯特公式-无噪信道传输能力公式:\n1 2 3 4  C = 2 × H × log2N (bps) C = B × log2N (bps) H为信道的带宽，即信道传输上、下限频率的差值，单位为Hz; . N为一个码元所取的离散值个数。       香农公式-带噪信道容量公式:\n   C = H × log2 ( 1 + S / N ) (bps)\n  S为信号功率，N为噪声功率，S/N为信噪比，通常把信噪比表示成10lg(S/N)分贝(dB)\n1 2  S/N=100 10lg (100) =20dB       编码与调制 传输介质 传输介质分为两大类:导向性传输介质(就是用一根实实在在的线来传播，如双绞线和光纤)和非导向性传输介质(在自由空间中自由传播，如红外线、微波)。导向性传输介质包含双绞线、同轴电缆和光纤。\n设备 物理层设备主要包含中继器和集线器，放大器和中继器都是起放大信号的作用，只不过放大器放大的是模拟信号，中继器放大的是数字信号。中继器是普通集线器的前身，集线器实际就是一种多端口的中继器。集线器一-般有4、8、16、24、32等数量的RJ45接口，通过这些接口，集线器便能为相应数量的计算机完成“中继”功能。由于它在网络中处于一种“中心”位置，因此集线器也叫作Hub。\n 集线器不能隔离冲突域。\n 数据链路层 基本功能  封装成帧  将网络层传下来的分组添加首部和尾部，用于标记帧的开始和结束。\n 透明传输  透明表示一个实际存在的事物看起来好像不存在一样。\n帧使用首部和尾部进行定界，如果帧的数据部分含有和首部尾部相同的内容，那么帧的开始和结束位置就会被错误的判定。需要在数据部分出现首部尾部相同的内容前面插入转义字符。如果数据部分出现转义字符，那么就在转义字符前面再加个转义字符。在接收端进行处理之后可以还原出原始数据。这个过程透明传输的内容是转义字符，用户察觉不到转义字符的存在。\n3. 差错检测 目前数据链路层广泛使用了循环冗余检验（CRC）来检查比特差错。\n信道分类  广播信道  一对多通信，一个节点发送的数据能够被广播信道上所有的节点接收到。\n所有的节点都在同一个广播信道上发送数据，因此需要有专门的控制方法进行协调，避免发生冲突（冲突也叫碰撞）。\n主要有两种控制方法进行协调，一个是使用信道复用技术，一是使用 CSMA/CD 协议。\n 点对点信道  一对一通信。\n因为不会发生碰撞，因此也比较简单，使用 PPP 协议进行控制。\n信道复用技术  频分复用  频分复用的所有主机在相同的时间占用不同的频率带宽资源。\n 时分复用  时分复用的所有主机在不同的时间占用相同的频率带宽资源。\n使用频分复用和时分复用进行通信，在通信的过程中主机会一直占用一部分信道资源。但是由于计算机数据的突发性质，通信过程没必要一直占用信道资源而不让出给其它用户使用，因此这两种方式对信道的利用率都不高。\n 统计时分复用  是对时分复用的一种改进，不固定每个用户在时分复用帧中的位置，只要有数据就集中起来组成统计时分复用帧然后发送。\n 波分复用  光的频分复用。由于光的频率很高，因此习惯上用波长而不是频率来表示所使用的光载波。\n 码分复用  为每个用户分配 m bit 的码片，并且所有的码片正交，对于任意两个码片 和 有\n为了讨论方便，取 m=8，设码片 为 00011011。在拥有该码片的用户发送比特 1 时就发送该码片，发送比特 0 时就发送该码片的反码 11100100。\n在计算时将 00011011 记作 (-1 -1 -1 +1 +1 -1 +1 +1)，可以得到\n其中 为 的反码。\n利用上面的式子我们知道，当接收端使用码片 对接收到的数据进行内积运算时，结果为 0 的是其它用户发送的数据，结果为 1 的是用户发送的比特 1，结果为 -1 的是用户发送的比特 0。\n码分复用需要发送的数据量为原先的 m 倍。\nCSMA/CD 协议 CSMA/CD 表示载波监听多点接入 / 碰撞检测。\n 多点接入 ：说明这是总线型网络，许多主机以多点的方式连接到总线上。 载波监听 ：每个主机都必须不停地监听信道。在发送前，如果监听到信道正在使用，就必须等待。 碰撞检测 ：在发送中，如果监听到信道已有其它主机正在发送数据，就表示发生了碰撞。虽然每个主机在发送数据之前都已经监听到信道为空闲，但是由于电磁波的传播时延的存在，还是有可能会发生碰撞。  记端到端的传播时延为 τ，最先发送的站点最多经过 2τ 就可以知道是否发生了碰撞，称 2τ 为 争用期 。只有经过争用期之后还没有检测到碰撞，才能肯定这次发送不会发生碰撞。\n当发生碰撞时，站点要停止发送，等待一段时间再发送。这个时间采用 截断二进制指数退避算法 来确定。从离散的整数集合 {0, 1, .., (2k-1)} 中随机取出一个数，记作 r，然后取 r 倍的争用期作为重传等待时间。\nPPP 协议 互联网用户通常需要连接到某个 ISP 之后才能接入到互联网，PPP 协议是用户计算机和 ISP 进行通信时所使用的数据链路层协议。\nPPP 的帧格式：\n F 字段为帧的定界符 A 和 C 字段暂时没有意义 FCS 字段是使用 CRC 的检验序列 信息部分的长度不超过 1500  MAC 地址 MAC 地址是链路层地址，长度为 6 字节（48 位），用于唯一标识网络适配器（网卡）。\nMAC地址全球唯一，由 IEEE对这些地址进行管理和分配。\n每个地址由两部分组成，分别是供应商代码和序列号。其中前24位二进制代表该供应商代码。剩下的24位由厂商自己分配。\n局域网 局域网是一种典型的广播信道，主要特点是网络为一个单位所拥有，且地理范围和站点数目均有限。\n主要有以太网、令牌环网、FDDI 和 ATM 等局域网技术，目前以太网占领着有线局域网市场。\n可以按照网络拓扑结构对局域网进行分类：\n以太网 以太网是一种星型拓扑结构局域网。\n早期使用集线器进行连接，集线器是一种物理层设备， 作用于比特而不是帧，当一个比特到达接口时，集线器重新生成这个比特，并将其能量强度放大，从而扩大网络的传输距离，之后再将这个比特发送到其它所有接口。如果集线器同时收到两个不同接口的帧，那么就发生了碰撞。\n目前以太网使用交换机替代了集线器，交换机是一种链路层设备，它不会发生碰撞，能根据 MAC 地址进行存储转发。\n以太网帧格式：\n 类型 ：标记上层使用的协议； 数据 ：长度在 46-1500 之间，如果太小则需要填充； FCS ：帧检验序列，使用的是 CRC 检验方法；  交换机 交换机具有自学习能力，学习的是交换表的内容，交换表中存储着 MAC 地址到接口的映射。\n正是由于这种自学习能力，因此交换机是一种即插即用设备，不需要网络管理员手动配置交换表内容。\n下图中，交换机有 4 个接口，主机 A 向主机 B 发送数据帧时，交换机把主机 A 到接口 1 的映射写入交换表中。为了发送数据帧到 B，先查交换表，此时没有主机 B 的表项，那么主机 A 就发送广播帧，主机 C 和主机 D 会丢弃该帧，主机 B 回应该帧向主机 A 发送数据包时，交换机查找交换表得到主机 A 映射的接口为 1，就发送数据帧到接口 1，同时交换机添加主机 B 到接口 2 的映射。\n虚拟局域网(VLAN) 虚拟局域网可以建立与物理位置无关的逻辑组，只有在同一个虚拟局域网中的成员才会收到链路层广播信息。\n例如下图中 (A1, A2, A3, A4) 属于一个虚拟局域网，A1 发送的广播会被 A2、A3、A4 收到，而其它站点收不到。\n使用 VLAN 干线连接来建立虚拟局域网，每台交换机上的一个特殊接口被设置为干线接口，以互连 VLAN 交换机。IEEE 定义了一种扩展的以太网帧格式 802.1Q（还有一种ISL协议，但支持思科的设备），它在标准以太网帧上加进了 4 字节首部 VLAN 标签，用于表示该帧属于哪一个虚拟局域网。\n具体的工作原理如下：\n PC发送数据帧进入交换机，会被打上vlan tag；vlan tag中的vlan id就是收到帧的接口的所属vlan；一旦数据帧被打上vlan tag，就变成了802.1Q（在源Mac地址和Type之间携带vlan tag的帧格式，计算机不识别）格式的帧 交换机检查数据帧的目的MAC地址，进行判断；如果目的MAC对应的接口允许tag中的vlan id通过，则数据帧可以转发；否则，丢弃该帧 数据帧从出接口发往PC前，会剥离vlan tag，使之还原为标准的以太网帧格式   VLAN是在第二层上实现隔离广播域\n 当一条链路中需要承载多VLAN信息的时候，需使用trunk来实现。例如下图：\nSTP 生成树协议 STP（Spanning Tree Protocol）是生成树协议的英文缩写，可应用于计算机网络中树形拓扑结构建立，主要作用是防止网桥网络中的冗余链路形成环路等工作。\n 通过将特定的端口选为 Blocking state，来实现无环的拓扑； IEEE 802.1D 规定了这一行为； Cisco采用IEEE802.1D的增强的私有协议生成树PVST+;  STP工作原理如下：\n 在每一个广播域选择一个root。并遵循下述选择优选级。 在每一个非根桥选择一个根端口。并遵循下述选择优选级。 每个段选择一个制定端口。并遵循下述选择优选级。 选择一个非指定端口进行Block。并遵循下述选择优选级。  选择优先级：\n  最低的根桥ID\n  最低的根路径代价\n   链路速度 花销代价     10Gb/s 2   1Gb/s 4   100Mb/s 19   10Mb/s 100      最低发送者桥ID\n  最低端口ID\n  STP端口状态将从Blockiing-\u0026gt;Listening-\u0026gt;Learning-\u0026gt;Forwarding的四种状态。\n链路聚合 把连接到同一台交换机上的多个物理端口捆绑为一个逻辑端口的过程叫做链路聚合。聚合组内只要还有物理端口存活，链路就不会中断，提高链路可靠性避免了STP计算，聚合组内物理端口不会被闭塞，增加链路传输带宽，聚合后的链路会基于流自动负载分担。\n网络层 因为网络层是整个互联网的核心，因此应当让网络层尽可能简单。网络层向上只提供简单灵活的、无连接的、尽最大努力交互的数据报服务。\n使用 IP 协议，可以把异构的物理网络连接起来，使得在网络层看起来好像是一个统一的网络。\n与 IP 协议配套使用的还有三个协议：\n 地址解析协议 ARP（Address Resolution Protocol） 网际控制报文协议 ICMP（Internet Control Message Protocol） 网际组管理协议 IGMP（Internet Group Management Protocol）  IP 数据报格式   版本 : 有 4（IPv4）和 6（IPv6）两个值；\n  首部长度 : 占 4 位，因此最大值为 15。值为 1 表示的是 1 个 32 位字的长度，也就是 4 字节。因为固定部分长度为 20 字节，因此该值最小为 5。如果可选字段的长度不是 4 字节的整数倍，就用尾部的填充部分来填充。\n  区分服务 : 用来获得更好的服务，一般情况下不使用。\n  总长度 : 包括首部长度和数据部分长度。\n  生存时间 ：TTL，它的存在是为了防止无法交付的数据报在互联网中不断兜圈子。以路由器跳数为单位，当 TTL 为 0 时就丢弃数据报。\n  协议 ：指出携带的数据应该上交给哪个协议进行处理，例如 ICMP、TCP、UDP 等。\n  首部检验和 ：因为数据报每经过一个路由器，都要重新计算检验和，因此检验和不包含数据部分可以减少计算的工作量。\n  标识 : 在数据报长度过长从而发生分片的情况下，相同数据报的不同分片具有相同的标识符。\n  片偏移 : 和标识符一起，用于发生分片的情况。片偏移的单位为 8 字节。\n  IP 地址编址方式 IP 地址的编址方式经历了三个历史阶段：\n  分类\n由两部分组成，网络号和主机号，其中不同分类具有不同的网络号长度，并且是固定的。\nIP 地址 ::= {\u0026lt; 网络号 \u0026gt;, \u0026lt; 主机号 \u0026gt;}\n  子网划分\n通过在主机号字段中拿一部分作为子网号，把两级 IP 地址划分为三级 IP 地址。\nIP 地址 ::= {\u0026lt; 网络号 \u0026gt;, \u0026lt; 子网号 \u0026gt;, \u0026lt; 主机号 \u0026gt;}\n要使用子网，必须配置子网掩码。一个 B 类地址的默认子网掩码为 255.255.0.0，如果 B 类地址的子网占两个比特，那么子网掩码为 11111111 11111111 11000000 00000000，也就是 255.255.192.0。\n注意，外部网络看不到子网的存在。\n  无分类\n无分类编址 CIDR 消除了传统 A 类、B 类和 C 类地址以及划分子网的概念，使用网络前缀和主机号来对 IP 地址进行编码，网络前缀的长度可以根据需要变化。\nIP 地址 ::= {\u0026lt; 网络前缀号 \u0026gt;, \u0026lt; 主机号 \u0026gt;}\nCIDR 的记法上采用在 IP 地址后面加上网络前缀长度的方法，例如 128.14.35.7/20 表示前 20 位为网络前缀。\nCIDR 的地址掩码可以继续称为子网掩码，子网掩码首 1 长度为网络前缀的长度。\n一个 CIDR 地址块中有很多地址，一个 CIDR 表示的网络就可以表示原来的很多个网络，并且在路由表中只需要一个路由就可以代替原来的多个路由，减少了路由表项的数量。把这种通过使用网络前缀来减少路由表项的方式称为路由聚合，也称为 构成超网 。\n在路由表中的项目由“网络前缀”和“下一跳地址”组成，在查找时可能会得到不止一个匹配结果，应当采用最长前缀匹配来确定应该匹配哪一个。\n  地址解析协议 ARP 网络层实现主机之间的通信，而链路层实现具体每段链路之间的通信。因此在通信过程中，IP 数据报的源地址和目的地址始终不变，而 MAC 地址随着链路的改变而改变。\nARP 实现由 IP 地址得到 MAC 地址。\n每个主机都有一个 ARP 高速缓存，里面有本局域网上的各主机和路由器的 IP 地址到 MAC 地址的映射表。\n如果主机 A 知道主机 B 的 IP 地址，但是 ARP 高速缓存中没有该 IP 地址到 MAC 地址的映射，此时主机 A 通过广播的方式发送 ARP 请求分组，主机 B 收到该请求后会发送 ARP 响应分组给主机 A 告知其 MAC 地址，随后主机 A 向其高速缓存中写入主机 B 的 IP 地址到 MAC 地址的映射。\n网际控制报文协议 ICMP ICMP 是为了更有效地转发 IP 数据报和提高交付成功的机会。它封装在 IP 数据报中，但是不属于高层协议。\nICMP 报文分为差错报告报文和询问报文。\n Ping  Ping 是 ICMP 的一个重要应用，主要用来测试两台主机之间的连通性。\nPing 的原理是通过向目的主机发送 ICMP Echo 请求报文，目的主机收到之后会发送 Echo 回答报文。Ping 会根据时间和成功响应的次数估算出数据包往返时间以及丢包率。\n Traceroute  Traceroute 是 ICMP 的另一个应用，用来跟踪一个分组从源点到终点的路径。\nTraceroute 发送的 IP 数据报封装的是无法交付的 UDP 用户数据报，并由目的主机发送终点不可达差错报告报文。\n 源主机向目的主机发送一连串的 IP 数据报。第一个数据报 P1 的生存时间 TTL 设置为 1，当 P1 到达路径上的第一个路由器 R1 时，R1 收下它并把 TTL 减 1，此时 TTL 等于 0，R1 就把 P1 丢弃，并向源主机发送一个 ICMP 时间超过差错报告报文； 源主机接着发送第二个数据报 P2，并把 TTL 设置为 2。P2 先到达 R1，R1 收下后把 TTL 减 1 再转发给 R2，R2 收下后也把 TTL 减 1，由于此时 TTL 等于 0，R2 就丢弃 P2，并向源主机发送一个 ICMP 时间超过差错报文。 不断执行这样的步骤，直到最后一个数据报刚刚到达目的主机，主机不转发数据报，也不把 TTL 值减 1。但是因为数据报封装的是无法交付的 UDP，因此目的主机要向源主机发送 ICMP 终点不可达差错报告报文。 之后源主机知道了到达目的主机所经过的路由器 IP 地址以及到达每个路由器的往返时间。  虚拟专用网 VPN 由于 IP 地址的紧缺，一个机构能申请到的 IP 地址数往往远小于本机构所拥有的主机数。并且一个机构并不需要把所有的主机接入到外部的互联网中，机构内的计算机可以使用仅在本机构有效的 IP 地址（专用地址）。\n有三个专用地址块：\n 10.0.0.0 ~ 10.255.255.255 172.16.0.0 ~ 172.31.255.255 192.168.0.0 ~ 192.168.255.255  VPN 使用公用的互联网作为本机构各专用网之间的通信载体。专用指机构内的主机只与本机构内的其它主机通信；虚拟指好像是，而实际上并不是，它有经过公用的互联网。\n下图中，场所 A 和 B 的通信经过互联网，如果场所 A 的主机 X 要和另一个场所 B 的主机 Y 通信，IP 数据报的源地址是 10.1.0.1，目的地址是 10.2.0.3。数据报先发送到与互联网相连的路由器 R1，R1 对内部数据进行加密，然后重新加上数据报的首部，源地址是路由器 R1 的全球地址 125.1.2.3，目的地址是路由器 R2 的全球地址 194.4.5.6。路由器 R2 收到数据报后将数据部分进行解密，恢复原来的数据报，此时目的地址为 10.2.0.3，就交付给 Y。\n网络地址转换 NAT 专用网内部的主机使用本地 IP 地址又想和互联网上的主机通信时，可以使用 NAT 来将本地 IP 转换为全球 IP。\n在以前，NAT 将本地 IP 和全球 IP 一一对应，这种方式下拥有 n 个全球 IP 地址的专用网内最多只可以同时有 n 台主机接入互联网。为了更有效地利用全球 IP 地址，现在常用的 NAT 转换表把传输层的端口号也用上了，使得多个专用网内部的主机共用一个全球 IP 地址。使用端口号的 NAT 也叫做网络地址与端口转换 NAPT。\n路由器的结构 路由器从功能上可以划分为：路由选择和分组转发。\n分组转发结构由三个部分组成：交换结构、一组输入端口和一组输出端口。\n  路由器分组转发流程\n  从数据报的首部提取目的主机的 IP 地址 D，得到目的网络地址 N。\n  若 N 就是与此路由器直接相连的某个网络地址，则进行直接交付；\n  若路由表中有目的地址为 D 的特定主机路由，则把数据报传送给表中所指明的下一跳路由器；\n  若路由表中有到达网络 N 的路由，则把数据报传送给路由表中所指明的下一跳路由器；\n  若路由表中有一个默认路由，则把数据报传送给路由表中所指明的默认路由器；\n  报告转发分组出错。\n    路由选择协议 路由选择协议都是自适应的，能随着网络通信量和拓扑结构的变化而自适应地进行调整。\n互联网可以划分为许多较小的自治系统 AS，一个 AS 可以使用一种和别的 AS 不同的路由选择协议。\n可以把路由选择协议划分为两大类：\n 自治系统内部的路由选择：RIP 和 OSPF 自治系统间的路由选择：BGP  1. 内部网关协议 RIP RIP 是一种基于距离向量的路由选择协议。距离是指跳数，直接相连的路由器跳数为 1。跳数最多为 15，超过 15 表示不可达。\nRIP 按固定的时间间隔仅和相邻路由器交换自己的路由表，经过若干次交换之后，所有路由器最终会知道到达本自治系统中任何一个网络的最短距离和下一跳路由器地址。\n距离向量算法：\n 对地址为 X 的相邻路由器发来的 RIP 报文，先修改报文中的所有项目，把下一跳字段中的地址改为 X，并把所有的距离字段加 1； 对修改后的 RIP 报文中的每一个项目，进行以下步骤： 若原来的路由表中没有目的网络 N，则把该项目添加到路由表中； 否则：若下一跳路由器地址是 X，则把收到的项目替换原来路由表中的项目；否则：若收到的项目中的距离 d 小于路由表中的距离，则进行更新（例如原始路由表项为 Net2, 5, P，新表项为 Net2, 4, X，则更新）；否则什么也不做。 若 3 分钟还没有收到相邻路由器的更新路由表，则把该相邻路由器标为不可达，即把距离置为 16。  RIP 协议实现简单，开销小。但是 RIP 能使用的最大距离为 15，限制了网络的规模。并且当网络出现故障时，要经过比较长的时间才能将此消息传送到所有路由器。\n2. 内部网关协议 OSPF 开放最短路径优先 OSPF，是为了克服 RIP 的缺点而开发出来的。\n开放表示 OSPF 不受某一家厂商控制，而是公开发表的；最短路径优先表示使用了 Dijkstra 提出的最短路径算法 SPF。\nOSPF 具有以下特点：\n 向本自治系统中的所有路由器发送信息，这种方法是洪泛法。 发送的信息就是与相邻路由器的链路状态，链路状态包括与哪些路由器相连以及链路的度量，度量用费用、距离、时延、带宽等来表示。 只有当链路状态发生变化时，路由器才会发送信息。  所有路由器都具有全网的拓扑结构图，并且是一致的。相比于 RIP，OSPF 的更新过程收敛的很快。\n3. 外部网关协议 BGP BGP（Border Gateway Protocol，边界网关协议）\nAS 之间的路由选择很困难，主要是由于：\n 互联网规模很大； 各个 AS 内部使用不同的路由选择协议，无法准确定义路径的度量； AS 之间的路由选择必须考虑有关的策略，比如有些 AS 不愿意让其它 AS 经过。  BGP 只能寻找一条比较好的路由，而不是最佳路由。\n每个 AS 都必须配置 BGP 发言人，通过在两个相邻 BGP 发言人之间建立 TCP 连接来交换路由信息。\n传输层 应用层 参考文献  CyC2018/CS-Notes: 技术面试必备基础知识、Leetcode、计算机操作系统、计算机网络、系统设计 (github.com) 《计算机网络》谢希仁 JamesF.Kurose, KeithW.Ross, 库罗斯, 等. 计算机网络: 自顶向下方法 [M]. 机械工业出版社, 2014. W.RichardStevens. TCP/IP 详解. 卷 1, 协议 [M]. 机械工业出版社, 2006.  ","permalink":"https://srpihot.github.io/post/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/","summary":"前言 本文主要用于总结计算机网络相关知识与细节，相对于本科软工所学的计网基础，还会更新不同厂商与配置信息。借鉴CyC2018/CS-Notes计算机网络部分，在此基础上进行扩展与总结。\n目录 概述 物理层 数据链路层 网络层 传输层 应用层 参考文献 概述 什么是计算机网络 就是利用通信设备和线路将地理位置不同的、功能独立的多个计算机系统互连起来，以功能完善的网络软件(即网络通信协议、信息交换方式、网络操作系统等)实现网络中资源共享和信息传递的系统。 计算机网络的组成：\n 边缘部分由所有连接在因特网上的主机组成。这部分是用户直接使用的，用来 进行通信(传送数据、音频或视频)和资源共享。 核心部分由大量网络和连接这些网络的路由器组成。这部分是为边缘部分提供 服务的(提供连通性和交换)。  计算机网络分类：\n 作用范围：  广域网 WAN 城域网 MAN 局域网 LAN 个人区域网 PAN   依据网络使用者：  公用网 专用网   依据网络拓扑结构：  总线形 星型 环形 树形 网形    什么是ISP? 互联网服务提供商 ISP 可以从互联网管理机构获得许多 IP 地址，同时拥有通信线路以及路由器等联网设备，个人或机构向 ISP 缴纳一定的费用就可以接入互联网。\n目前的互联网是一种多层次 ISP 结构，ISP 根据覆盖面积的大小分为第一层 ISP、区域 ISP 和接入 ISP。互联网交换点 IXP 允许两个 ISP 直接相连而不用经过第三个 ISP。","title":"计算机网络"},{"content":"前言 本文主要用于个人总结SpringBoot开发中，一些常用的Utils类的使用，方便自己cv。\n文件上传 首先在application.yaml文件里，添加如下设置：\n1 2 3 4 5 6 7  spring: servlet: multipart: # 设置单个文件大小 max-file-size: 20MB # 设置单次请求文件的总大小 max-request-size: 200MB   Utils类代码：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  public class FileUtils { public static void uploadFileByByte(byte[] file, String filePath, String fileName) throws Exception { File targetFile = new File(filePath); if(!targetFile.exists()){ targetFile.mkdir(); } FileOutputStream out = new FileOutputStream(filePath+\u0026#34;/\u0026#34;+fileName); out.write(file); out.flush(); out.close(); System.out.println(\u0026#34;upload success\u0026#34;); } public static void uploadFileByStream(InputStream inputStream, String filePath, String fileName) throws Exception { File targetFile = new File(filePath); if(!targetFile.exists()){ targetFile.mkdir(); } FileOutputStream out = new FileOutputStream(filePath+\u0026#34;/\u0026#34;+fileName); IOUtils.copy(inputStream,out); out.flush(); out.close(); System.out.println(\u0026#34;upload success\u0026#34;); } }   Controller层(根据不同需求编码）：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45  @RestController @CrossOrigin public class FileController { //测试文件传输接口  @PostMapping(\u0026#34;/uploadTest\u0026#34;) public JSONObject uploadTest(@RequestParam(\u0026#34;file\u0026#34;) MultipartFile file){ JSONObject ret=new JSONObject(); if(file.isEmpty()){ ret.put(\u0026#34;success\u0026#34;, false); ret.put(\u0026#34;exc\u0026#34;, \u0026#34;文件为空\u0026#34;); }else{ String uuid = UUID.randomUUID().toString(); String originalFilename = file.getOriginalFilename(); assert originalFilename != null; String suffix = originalFilename.substring(originalFilename.lastIndexOf(\u0026#34;.\u0026#34;) + 1).toLowerCase();//防止大小写绕过  String fileName = uuid + \u0026#34;.\u0026#34; + suffix; String filePath = System.getProperty(\u0026#34;user.dir\u0026#34;)+\u0026#34;/upload\u0026#34;;//更改为相关目录  System.out.println(filePath); switch (suffix) { case \u0026#34;jpg\u0026#34;: case \u0026#34;png\u0026#34;: case \u0026#34;jpeg\u0026#34;: filePath += \u0026#34;/image\u0026#34;; break; case \u0026#34;pdf\u0026#34;: filePath += \u0026#34;/pdf\u0026#34;; break; default: filePath += \u0026#34;/other\u0026#34;; } try { FileUtils.uploadFileByStream(file.getInputStream(),filePath,fileName); ret.put(\u0026#34;success\u0026#34;, true); ret.put(\u0026#34;path\u0026#34;,fileName); ret.put(\u0026#34;exc\u0026#34;, \u0026#34;上传成功\u0026#34;); } catch (Exception e) { e.printStackTrace(); ret.put(\u0026#34;success\u0026#34;, false); ret.put(\u0026#34;exc\u0026#34;, \u0026#34;上传失败\u0026#34;); } } return ret; } }   CORS跨域设置   可以添加@CrossOrigin注解在Controller层里\n  在Config类添加，或者直接创建一个CORSconfig类。\n1 2 3 4 5 6 7 8 9 10 11 12  @Bean public WebMvcConfigurer corsConfigurer(){ return new WebMvcConfigurer() { @Override public void addCorsMappings(CorsRegistry registry) { registry.addMapping(\u0026#34;/**\u0026#34;) .allowedHeaders(\u0026#34;*\u0026#34;) .allowedMethods(\u0026#34;*\u0026#34;) .allowedOrigins(\u0026#34;*\u0026#34;); } }; }     BaseTime类（JPA版） 在Entity里，创建一个BaseTime类\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  package com.xxx.xxx; import org.springframework.data.annotation.CreatedDate; import org.springframework.data.annotation.LastModifiedDate; import org.springframework.data.jpa.domain.support.AuditingEntityListener; import javax.persistence.Column; import javax.persistence.EntityListeners; import javax.persistence.MappedSuperclass; import java.time.LocalDateTime; @MappedSuperclass @EntityListeners(value = AuditingEntityListener.class) public abstract class BaseTime { /** * 所有类的超类 * 自动更新创建时间和更新时间 * * **/ @CreatedDate @Column(nullable = false, updatable = false) private LocalDateTime createTime; @LastModifiedDate @Column() private LocalDateTime updateTime; public LocalDateTime getCreateTime() { return createTime; } public void setCreateTime(LocalDateTime createTime) { this.createTime = createTime; } public LocalDateTime getUpdateTime() { return updateTime; } public void setUpdateTime(LocalDateTime updateTime) { this.updateTime = updateTime; } }   每一个Entity类继承时，需要添加如下设置：\n1 2 3 4 5 6 7 8 9 10  @EntityListeners(value = AuditingEntityListener.class) @Entity public class Achievement extends BaseTime{ @Id @GeneratedValue(strategy = GenerationType.IDENTITY) @Column(name = \u0026#34;id\u0026#34;,nullable = false) private Integer id; @Column(nullable = false) private String name; }   最后，在StratApplication启动类里添加@EnableJpaAuditing注解。\nEmmm ","permalink":"https://srpihot.github.io/post/springboot%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97/","summary":"前言 本文主要用于个人总结SpringBoot开发中，一些常用的Utils类的使用，方便自己cv。\n文件上传 首先在application.yaml文件里，添加如下设置：\n1 2 3 4 5 6 7  spring: servlet: multipart: # 设置单个文件大小 max-file-size: 20MB # 设置单次请求文件的总大小 max-request-size: 200MB   Utils类代码：\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25  public class FileUtils { public static void uploadFileByByte(byte[] file, String filePath, String fileName) throws Exception { File targetFile = new File(filePath); if(!","title":"SpringBoot常用模块"},{"content":"1.useradd 添加用户  useradd srpihot 创建srpihot用户 useradd -u 555 srpihot 创建srpihot用户，分配UID=555 useradd -g user1 srpihot 创建srpihot用户，分配到用户组user1里 useradd -d ~/etc srpihot 创建srpioht用户，并且分配家目录  2.passwd 修改密码  passwd srpihot 设置srpihot用户密码(仅root用户可用) passwd 修改当前密码  3.usermod 用户修改  usermod -d /home/new -m srpihot 给srpihot用户重新设置家目录 usermod -L srpihot 冻结srpihot用户 usermod -U srpihot 解锁srpihot用户  4.usedel 用户删除  userdel srpihot 删除srpihot用户 userdel -r srpihot 删除srpihot用户所有信息（家目录、邮件等）  5.groupadd 增加用户组  groupadd srpihot 增加srpihot用户组  6.groupdel 删除用户组  groupdel srpihot 删除srpihot用户组  7.users、who、w 查看用户信息  users 查看当前存在那些用户 who 输出信息更多 w 输出信息最多 w命令每行 1.登陆的用户名 2.用户登陆终端 3.如果从网络登陆则会显示ip 4.用户登陆时间 5.用户闲置时间 6.与终端相关当前所有运行进程消耗的cpu时间总量 7.当前what列所对应的进程所消耗的cpu时间总量 8.用户当前运行的进程  8.su、sudo 切换用户  su 普通用户切换到root su - 普通用户切换到root用户 并且会改变用户环境 su srpihot 切换到srpihot用户 visudo 修改sudo文件 添加其他用户 sudo passwd user user1 修改user1的密码  9.at 指定单一时刻执行任务  at now + 30 minutes 指定30min后的任务 at\u0026gt; /sbin/shutdown -h now at\u0026gt; \u0026lt;EOT\u0026gt; (CTRL + D)停止输入 关机 at 00:00 2019-03-25 指定2019-3-25日00：00时的任务 atq 查看现在的at列表 atrm 5 删除5号作业  10.cron 周期性执行任务  service cron strat 启动 service cron status 正常 crontab -e 进入编辑模式 ***** service httpd restart 设置每分钟进行重启http服务 第一个* 代表分钟 * 或者 */1都是一分钟一次 第二个* 代表小时 *或者*/1 一小时一次 第三个*代表日期 1 每个月的第一天重启 第四个*代表月份 12 每年的12月份重启 第五个*代表星期 0代表星期日 1~6代表星期一到星期六 * 6 1 * *　service httpd restart 每个月的1号6点重启http服务 crontab -l 查看设置任务的列表 crontab -r 删除列表 crontab -u john -l 查看john的任务列表  11.pwd 查看当前目录 12.touch 创建文件  touch 1.txt 创建1.txt  13.rm 删除文件  rm 1.txt 删除文件  14.mv 移动文件  mv 1.txt /temp 移动1.txt到/temp文件夹下 mv 1.txt 1.doc 重命名1.txt为1.doc mv 1.txt /temp/1.doc 移动1.txt到/temp文件夹下并重命名为1.doc  15.cat 查看文件  cat 1.txt 查看1.txt文件 cat -n 1.txt 查看1.txt文件时前面显示行号  16.head 查看文件头  head 1.txt 默认显示文件前10行 head -n 20 1.txt 设置显示文件前20行  17.tail 查看文件尾  tail 1.txt 默认显示文件后10行 tail -n 20 1.txt 设置显示文件后20行 tail -f /var/log/messages 如果有新内容写入时会显示新内容  18.cd 进入目录 19.mkdir 创建目录  mkdir -p kali/sph/srpihot 一次性创建目录  20.rmdir 或者 rm 删除目录  rmdir /sph 删除sph空目录，sph里如果有东西则删除失败 rm -r sph/ 删除sph目录及内所有目录 但会有提示 rm -rf 不会提示 rm -rf / 删除所有系统文件  21.cp 复制文件  cp 1.txt /srpihot/2.txt 复制1.txt到srpihot目录下重命名为2.txt cp -r temp temp1 复制temp目录  22.权限  ls -al 查看文件或目录的权限 lsattr 1.txt 查看文件隐藏属性 chattr 改变文件隐藏属性 -a root用户不能删除，可以在文件底添加新内容 -i root用户无法修改 chmod 改变文件权限 u+r 用户添加可读权限 u+w 用户添加可写权限 u-x 用户取消执行权限 u+rwx u=rwx 用户添加读写执行权限 exp： chmod u=rwx shutdown.sh u 当前用户 g 当前用户组 o 其他人 chmod -R 754 shutdown.sh r=4 w=2 x=1 7=4+2+1 5=4+1 4=4 chown 改变文件用户和用户组 chown john a.txt 改变用户 chown :john a.txt 改变用户组 chown john:john a.txt 改变用户和用户组 chown -R john:john a 改变目录的用户和用户组 chgrp 改变文件的用户组 chgrp john b.txt 改变用户组 chgrp -R john b 改变目录的用户组 文件特殊属性学明白后补录  23.file 输出文件更多信息 24.find 一般查找  find PATH -name FILENAME 根据文件名查找 -perm 根据文件权限查找 -user username 根据文件的用户名查找 -mtime -n/+n 查找n天内/n天前更改过的文件 -atime -n/+n 查找n天内/n天前访问过的文件 -ctime -n/+n 查找n天内/n天前创建的文件 -newer filename 查找更改时间比filename新的文件 -type b/d/c/p/l/f/s 查找块/目录/字符/管道/链接/普通/套接字文件 -size 根据文件大小查找 -depth n 最大查找目录深度为n exp:find / -name *.conf  25.locate 数据库查找  updatedb 更新数据库 locate srpihot.txt 查找srpihot.txt 文件 如果没有就更新一下数据库，数据库是记录文件数据库。  26.which/whereis 查找执行文件  which passwd whereis passwd  27.文件压缩和打包  gzip/gunzip 用于单个文件压缩 gzip install.log 压缩文件 gunzip install.log.gz 解压文件 tar 多用于多个文件合并压缩 tar -zcvf sph.tgz /sph 压缩sph目录 tar -zxvf sph.tgz -C /tmp 解压到tmp目录下 bzip2 bzip2 install.log 压缩文件 bzip2 -d install.log.bz2 解压文件 cpio find /etc -name *.conf | cpio -covB \u0026gt; /tmp/conf.cpio 备份 cpio -icdvu \u0026lt; /tmp/conf.cpio 还原  28.grep 搜索文本  grep -i 'sph' sph.txt 不区分大小写 -c 统计包含匹配的行数 -n 输出行数 -v 反向匹配  29.sort 排序  sort -ntkr 文件名 -n 按照数字排序 -t 指定分隔符 -k 指定第几列 -r 反向排列 sort -t \u0026quot;:\u0026quot; -k 2 以：为间隔符 以第二列参数进行排列  30.uniq 删除重复内容  uniq -ic -i 忽略大小写 -c 计算重复行数 uniq删除是相近几行重复的内容，所以与sort搭配使用 exp： cat uniq.txt | sort | uniq -ic  31.cut 截取文本  cut -fcd -f 指定的列 -d '分隔符' -c 指定的列中的字符 exp： cut -f1,3-5 -d ':' 截取第1列，第3到第5列的文本 cut -c3-5 截取每一行第3到第5个字符  32.tr 文本转换  tr -d tr '[a-z]' '[A-Z]' 大小写转换 tr -d ':' 删除文本的：号  33.paste 文本合并  paste a.txt b.txt 合并 paste -d : a.txt b.txt 合并 间隔符是：  34.split 分割大文件  split -l 500 a.txt small a.txt以按照500行分割成small1.txt small2.txt等文件 split -b 64m big_bin small_bin_ big_bin以分为多个64m的small_bin_xx等文件  35.ifconfig 检查配置网卡  ifconfig eth0 192.168.159.130 netmask 255.255.255.0 ifconfig eth0 192.168.159.130/24 修改ip地址及其子网掩码 ifconfig eth0 192.168.125.130 broadcast 192.168.159.255 netmask 255.255.255.0 ifconfig eth0 down 关闭eth0网卡( ifdown eth0 ) ifconfig eth0 up 启动eth0网卡( ifup eth0 ) ifconfig -a 显示所有网卡  36.route 路由和网关设置  route add default gw 192.168.159.2 添加网关 route del default gw 192.168.159.2 删除网关 route del default 简写 route -n 查看系统当前的路由表  37.ping 网络测试  ping -ciw -c 指定ping的次数 -i 指定ping的发送间隔 -w 如果无回应，则会在超过时间后退出  38.host 查询DNS记录  host www.baidu.com  39.ps 静态进程查看  -Aaxu -ljf -A/-e 显示所有进程 -a 显示现行终端机下的所有进程，包括其他用户的进程 -x 以用户为主的进程状态 -u 通常与 a 这个参数一起使用，可列出较完整信息 -l 较长、较详细的将该PID 的的信息列出 -j 工作的格式 -f 做一个更为完整的输出 ps -aux ps -l ps -ef STAT：该程序目前的状态，主要的状态有： R ：该程序目前正在运作，或者是可被运作； S ：该程序目前正在睡眠当中，但可被某些讯号(signal) 唤醒。 T ：该程序目前正在侦测或者是停止了； Z ：该程序应该已经终止，但是其父程序却无法正常的终止他，造成 zombie (疆尸) 程序的状态  40.top 动态进程查看  快捷键： b: 高亮 y: 行高亮(默认关) x: 列高亮(默认开) s: 设置更新时间(默认3秒) k: kill c: cmd name/line O：进入排序选择页 P：按照CPU使用率排序 M：按照空间使用率 N：按照PID排序 T：按照cpu使用时间排序 R：可以重新定义一个进程  41.kill killall 进程终止  kill -lapsu PID -l 信号，若果不加信号的编号参数，则使用“-l”参数会列出全部的信号名称 -a 当处理当前进程时，不限制命令名和进程号的对应关系 -p 指定kill 命令只打印相关进程的进程号，而不发送任何信号 -s 指定发送信号 -u 指定用户 tips：快速查找http的PID pidof httpd killall 服务名 killall httpd 终止http服务  42.lsof  lsof /filepath/file 查看谁正在使用某个文件 lsof +D /filepath/filepath2/ 递归查看某个目录的文件信息那个被打开 备注: 使用了+D，对应目录下的所有子目录和文件都会被列出 lsof | grep ‘/filepath/filepath2/' 比使用+D选项，遍历查看某个目录的所有文件信息 的方法 lsof -u username 列出某个用户打开的文件信息 lsof -c mysql 列出某个程序所打开的文件信息 备注: -c 选项将会列出所有以mysql开头的程序的文件，其实你也可以写成lsof | grep mysql,但是第一种方法明显比第二种方法要少打几个字符了 lsof -c mysql -c apache 列出多个程序多打开的文件信息 lsof -u test -c mysql 列出某个用户以及某个程序所打开的文件信息 lsof -u ^root 列出除了某个用户外的被打开的文件信息 备注：^这个符号在用户名之前，将会把是root用户打开的进程不让显示 lsof -p 1 通过某个进程号显示该进行打开的文件 lsof -p 123,456,789 列出多个进程号对应的文件信息 lsof -p ^1 列出除了某个进程号，其他进程号所打开的文件信息 lsof -i 列出所有的网络连接 lsof -i tcp 列出所有tcp 网络连接信息 lsof -i udp 列出所有udp网络连接信息 lsof -i :3306 列出谁在使用某个端口 lsof -i udp:55 列出谁在使用某个特定的udp端口 lsof -i tcp:80 特定的tcp端口 lsof -a -u test -i 列出某个用户的所有活跃的网络端口 lsof -N 列出所有网络文件系统 lsof -u 域名socket文件 lsof -g 5555 某个用户组所打开的文件信息 lsof -d description(like 2) 根据文件描述列出对应的文件信息 lsof -d 2-3 根据文件描述范围列出文件信息  43.调整线程优先级  nice -n -10 ./job.sh renice -10 -p 5555  ","permalink":"https://srpihot.github.io/post/linux-command%E6%95%B4%E7%90%86/","summary":"1.useradd 添加用户  useradd srpihot 创建srpihot用户 useradd -u 555 srpihot 创建srpihot用户，分配UID=555 useradd -g user1 srpihot 创建srpihot用户，分配到用户组user1里 useradd -d ~/etc srpihot 创建srpioht用户，并且分配家目录  2.passwd 修改密码  passwd srpihot 设置srpihot用户密码(仅root用户可用) passwd 修改当前密码  3.usermod 用户修改  usermod -d /home/new -m srpihot 给srpihot用户重新设置家目录 usermod -L srpihot 冻结srpihot用户 usermod -U srpihot 解锁srpihot用户  4.usedel 用户删除  userdel srpihot 删除srpihot用户 userdel -r srpihot 删除srpihot用户所有信息（家目录、邮件等）  5.groupadd 增加用户组  groupadd srpihot 增加srpihot用户组  6.groupdel 删除用户组  groupdel srpihot 删除srpihot用户组  7.","title":"Linux Command整理"},{"content":"DOS:  内部命令：  1.dir /p 分屏显示 /w 一行五个分开显示 /s 显示当前盘符下所有目录 /a : h 显示隐藏目录 : s 显示系统文件 : d 只显示目录 : -d 只显示文件 : r 显示只读文件 : -r 显示非只读文件 /o : n 按照名字排序 : d 按照时间日期排序 : s 按照文件大小排序 : g 按照目录在前排序   tips:\n 查找某个目录下的srpihot.txt dir /s srpihot.txt 显示以.txt后缀的文件 dir *.txt   2.cd cd d: 进入到d盘 cd srpihot 进入srpihot目录 cd .. 返回到上一级目录 cd nul \u0026gt;srpihot.txt 创建新文件  3.md md srpihot 创建srpihot目录  4.rd rd srpihot 删除srpihot目录  5.path  如果在Path命令中定义了某个目录，那么你在任何地方，都可以直接执行Path中指定目录里的文件\n path d:\\srpihot 进入当前目录下使用当前目录里的命令 path c:\\;d:\\;e:\\  6.type type srpihot.txt 查看ASCII类型文件（一般用来查看flag值） type nul \u0026gt; srpihot.txt 创建新文件  7.copy copy *.txt d:\\srpihot 将当前目录下所有txt文件复制到D盘srpihot目录下 copy srpihot.txt srpihot.php 将当前目录下srpihot.txt重命名为srpihot.php copy 1.txt+2.txt 12.txt 将1.txt和2.txt连接到一起重命名为12.txt copy photos.jpg/b + yijuhua.txt muma.php.jpg 图片一句话木马制作（文件如果不是ascii类型需要加/b） copy con：srpihot.bat cls pause 当前目录下生成srpihot.bat文件 文件内容为 cls pause copy con prn 将当前命令台的内容拷贝到打印机 copy nul \u0026gt; srpihot.txt 创建新文件  8.del  /p 删除文件之前会再次询问是否删除   del . 删除当前目录下所有文件 （此时也会再次询问）\n 9.ren or rename  rename 1.txt 2.txt 将1.txt重命名为2.txt  10.cls 清屏 11.ver 查看当前系统版本信息 12.date 查看当前日期  date 10-1-2019 修改当天日历信息  13.time 查看当前时间  time 10：30：00.00 修改成上午10：30分  外部命令(DOS)： 1.format 格式化 /s 格成系统盘 /q 快速格式化 /u 完全格式化（不能用unformat消除）   format d:/q 快速格式化d盘\n 2.unformat 恢复格式化 unformat d: /l 恢复d盘格式化并且显示恢复列表 /test 显示能够恢复的列表 /p 传送到打印机  3.append c:\\srpihot /x:ON 添加文件夹里的文件夹也加入append，默认关闭，/x:OFF /e 是指将附加文件夹列表保存为append的环境变量。该命令只在启动系统后第一次使用append时使用。   append用法是说只要加入后 里面的文件可以直接调用而不去调转到其目录下\n 4.deltree deltree d:/srpihot /y 删除srpihot里所有文件及其srpihot目录 /y是不需要提示 rd虽然也能删除目录但是当里有文件时是不能删除的 但deltree可以  5.attrib 改变文件属性  +r | -r 增加或取消只读属性 +a | -a 增加或取消存档文件 +h | -h 增加或取消隐藏文件 +s | -s 增加或取消系统文件 /s 显示其子目录所有文件属性  6.find 查找  /v 显示除所查询内容其他所有行 /c 显示文件中包含查询内容的行数 /n 输出行号 find “srpihot” d:\\srpihot\\srpihot.txt  7.more 命令输出内容太多时用 命令|more type srpihot.txt | more   CMD指令：  1.md md srpihot 创建srpihot目录  2.rd rd srpihot 删除srpihot目录 /s 删除目录下所有文件和子目录 /q 不经确认删除  3.copy  /d 允许将复制的加密文件在目标处作为解密文件保存 /v 验证是否写入新文件 /n 名字过长会使用短文件 /y 禁止提示覆盖现有文件 /-y 提示用户覆盖现存的文件 /z 在重启模式中复制网络文件 /a 表明是ascii类型文件 /b 表明是二进制 copy 1.doc 2.doc /a 复制的文件末尾为文件结束符 copy photos.jpg/b + yijuhua.txt muma.php.jpg 图片一句话木马制作（文件如果不是ascii类型需要加/b）  4.xcopy(重要)  /w 复制前有确认信息 /p 提示用户确定是否要创建每个目标文件 /c 忽略错误 /v 验证文件 /q 不返回复制信息 /f 复制时显示源文件跟目标文件名 /l 显示复制列表 /g 创建解密的目标文件 /d:月-日-年 exp:/d:25-10-2018 此日期之后包括此日期 /u 复制源目录中目标目录已有的文件（一般用于重新获得上一个命令的复制列表） /i 目标目录没有 会新创建一个 /s 复制当前目录下非空目录和子目录 若没有只会复制本目录下的文件 /e /s+复制空目录 /t 只复制目录结构不会复制文件 /k 保存原来源文件的属性 默认不保存 /r 只复制只读文件 /h 复制隐藏和系统文件属性默认不复制 /a 复制存档文件并保存属性 /m 复制存档文件但不保存属性 /n 同copy下 /o 复制文件所有权与自由选择的访问控制列表信息（DACL） /x 复制文件审核设置和系统访问控制列表信息（SACL）包括DACL /y 禁止提示用户确认要覆盖现有的目标文件 /-y 提示用户确认要覆盖现有的目标文件 /z 在重启模式中通过网络复制   xcopy c:\\windows d:\\srpihot /s /e 复制c:\\windows下所有文件文件及目录到d:\\srpihot下\n 5.cd cd /d d: 进入到d盘（更改盘要用/d） cd srpihot 进入srpihot目录 cd .. 返回到上一级目录 cd nul \u0026gt;srpihot.txt 创建新文件  6.dir /p 分屏显示 /q 显示文件权限 /w 一行五个分开显示 /d 跟/w一样但按照列排 /s 显示当前盘符下所有目录 /a : h 显示隐藏目录 : s 显示系统文件 : d 只显示目录 : -d 只显示文件 : r 显示只读文件 : -r 显示非只读文件 /o : n 按照名字排序 : d 按照时间日期排序 : s 按照文件大小排序 : g 按照目录在前排序 /a 全部后可显示 a存档 h隐藏 s系统文件 r只读 d目录 不显示-a -h -s - r -d /n 长列表显示全部名字 /x 显示短名字 显示长名字之后 /c 按照文件大小显示多个分隔符 /4 显示4位数的年份格式  7.ren or rename rename 1.txt 2.txt 将1.txt重命名为2.txt  8.del /p 提示用户确认是否删除指定文件 /f 强制删除只读文件 /s 从当前目录及其所有子目录中删除指定文件。显示正在被删除的文件名。 /q不提示用户确认删除 /a 根据属性删除 a存档 h隐藏 s系统文件 r只读 d目录 不显示-a -h -s -r -d  9.attrib 改变文件属性  +r | -r 增加或取消只读属性 +a | -a 增加或取消存档文件 +h | -h 增加或取消隐藏文件 +s | -s 增加或取消系统文件 /s 显示其子目录所有文件属性 /d 应用到当前目录  10.replace /a 将新文件添加到目标目录中而不是替换现存的文件 /p 替换之前会确认 /r 替换只读文件和未受保护的文件 /w 用户插入磁盘时开始执行 /s 搜索目标目录所有的子目录并替换匹配的文件 /u 更新目标文件  11.more 命令输出内容太多时用 /c 显示页面前清楚屏幕 /p 扩展换页符 /s 将多个空白行更改为一个空白行 /tn 更改由n指定的空格数的制表符 +n 显示由n指定的行开始显示   type srpihot.txt | more\n 12.find 查找  /v 显示除所查询内容其他所有行 /c 显示文件中包含查询内容的行数 /n 输出行号 /i 不区分大小写   find “srpihot” d:\\srpihot\\srpihot.txt\n 13.fc /a 压缩后比较 每组第一行和最后一行 /b 二进制模式比较 /c 忽略字母大小写 /l 以ascii码模式比较文件 /lbn 为内部缓存行设置行数n，默认100行，超过则取消比较 /n 显示以ascii码比较时行号 /t 防止将制表符当作空格比较 默认会当作 /u 将文件以Unicode文本进行比较 /w 压缩空白空间（空格和制表符） /nnnn 如果匹配小于nnnn行则会显示不同  14.start \u0026quot;title\u0026quot; 指定在“命令提示符”窗口标题栏中显示的标题。 /dpatch 指定启动目录。 /i 将 Cmd.exe 启动环境传送到新的“命令提示符”窗口。 /min 启动新的最小化窗口。 /max 启动新的最大化窗口。 /separate 在单独的内存空间启动 16 位程序。 /shared 在共享的内存空间启动 16 位程序。 /low 以空闲优先级启动应用程序。 /normal 以一般优先级启动应用程序。 /high 以高优先级启动应用程序。 /realtime 以实时优先级启动应用程序。 /abovenormal 以超出常规优先级的方式启动应用程序。 /belownormal 以低出常规优先级的方式启动应用程序。 /wait 启动应用程序，并等待其结束。 /b 启动应用程序时不必打开新的“命令提示符”窗口。除非应用程序启用 CTRL+C，否则将忽略 CTRL+C 操作。使用 CTRL+BREAK 中断应用程序。  15.exit 退出 16.color 颜色字体 0 = 黑色 8 = 灰色 1 = 蓝色 9 = 淡蓝色 2 = 绿色 A = 淡绿色 3 = 浅绿色 B = 淡浅绿色 4 = 红色 C = 淡红色 5 = 紫色 D = 淡紫色 6 = 黄色 E = 淡黄色 7 = 白色 F = 亮白色  ​\n17.个性化cmd title srpihot 命令行为srpihot prompt命令 输入help prompt $A \u0026amp; (与号) $B | (坚线) $C ( (左括号) $D 当前日期 $E 转义码(ASCII 码 27) $F ) (右括号) $G \u0026gt; (大于号) $H Backspace (删除前一个字符) $L \u0026lt; (小于号) $N 当前驱动器 $P 当前驱动器及路径 $Q = (等号) $S (空格) $T 当前时间 $V Windows 版本号 $_ 回车换行符 $$ $ (美元符号)   如果命令扩展被启用，PROMPT 命令会支持下列格式化字符:\n  $+ 根据 PUSHD 目录堆栈的深度，零个或零个以上加号(+)字符， 一个推的层一个字符。 $M 如果当前驱动器不是网络驱动器，显示跟当前驱动器号或 空字符串有关联的远程名。  18.tree 图像化显示目录树 /a 文字显示 /f 图形显示   tree d: /f | more\n 19.set path=c:\\windows;c:\\windows\\system32; 20.shutdown /i 显示图形用户界面(GUI)。 这必须是第一个选项。 /l 注销。这不能与 /m 或 /d 选项一起使用。 /s 关闭计算机。 /sg 关闭计算机。在下一次启动时， 重启任何注册的应用程序。 /r 完全关闭并重启计算机。 /g 完全关闭并重新启动计算机。在重新启动系统后， 重启任何注册的应用程序。 /a 中止系统关闭。 这只能在超时期间使用。 与 /fw 结合使用，以清除任何未完成的至固件的引导。 /p 关闭本地计算机，没有超时或警告。 可以与 /d 和 /f 选项一起使用。 /h 休眠本地计算机。 可以与 /f 选项一起使用。 /hybrid 执行计算机关闭并进行准备以快速启动。 必须与 /s 选项一起使用。 /fw 与关闭选项结合使用，使下次启动转到 固件用户界面。 /e 记录计算机意外关闭的原因。 /o 转到高级启动选项菜单并重新启动计算机。 必须与 /r 选项一起使用。 /m \\\\computer 指定目标计算机。 /t xxx 将关闭前的超时时间设置为 xxx 秒。 有效范围是 0-315360000 (10 年)，默认值为 30。 如果超时时间大于 0，则默示为 /f 参数。 /c \u0026quot;comment\u0026quot; 有关重新启动或关闭的原因的注释。 最多允许 512 个字符。 /f 强制关闭正在运行的应用程序而不事先警告用户。 如果为 /t 参数指定大于 0 的值， 则默示为 /f 参数。 /d [p|u:]xx:yy 提供重新启动或关闭的原因。 p 指示重启或关闭是计划内的。 u 指示原因是用户定义的。 如果未指定 p 也未指定 u，则重新启动或关闭 是计划外的。 xx 是主要原因编号(小于 256 的正整数)。 yy 是次要原因编号(小于 65536 的正整数)。   shutdown -s -t 1 一秒内秒关机\n 19.mmc /a 打开控制台 20.at \\\\computername 指定远程计算机。如果省略这个参数， 会计划在本地计算机上运行命令。 id 指定给已计划命令的识别号。 /delete 删除某个已计划的命令。如果省略 id， 计算机上所有已计划的命令都会被删除。 /yes 不需要进一步确认时，跟删除所有作业 的命令一起使用。 time 指定运行命令的时间。 /interactive 允许作业在运行时，与当时登录的用户 桌面进行交互。 /every:date[,...] 指定在每周或每月的特定日期运行命令。 如果省略日期，则默认为在每月的 本日运行。 /next:date[,...] 指定在下一个指定日期(如，下周四)运 行命令。如果省略日期，则默认为在每 月的本日运行。 \u0026quot;command\u0026quot; 准备运行的 Windows NT 命令或批处理 程序。   at 12：00 shutdown -s -t 100\n 21.cmd CMD [/A | /U] [/Q] [/D] [/E:ON | /E:OFF] [/F:ON | /F:OFF] [/V:ON | /V:OFF] [[/S] [/C | /K] string] /C 执行字符串指定的命令然后终止 /K 执行字符串指定的命令但保留 /S 修改 /C 或 /K 之后的字符串处理(见下) /Q 关闭回显 /D 禁止从注册表执行 AutoRun 命令(见下) /A 使向管道或文件的内部命令输出成为 ANSI /U 使向管道或文件的内部命令输出成为 Unicode /T:fg 设置前台/背景颜色(详细信息见 COLOR /?) /E:ON 启用命令扩展(见下) /E:OFF 禁用命令扩展(见下) /F:ON 启用文件和目录名完成字符(见下) /F:OFF 禁用文件和目录名完成字符(见下) /V:ON 使用 ! 作为分隔符启用延迟的环境变量 扩展。例如，/V:ON 会允许 !var! 在执行时 扩展变量 var。var 语法会在输入时 扩展变量，这与在一个 FOR 循环内不同。 /V:OFF 禁用延迟的环境扩展。  22.ntsd -c 执行调试命令 q 运行完毕退出 -p 进程的标识   ntsd -p PID 结束一切进程\n 23.tasklist TASKLIST [/S system [/U username [/P [password]]]] [/M [module] | /SVC | /V] [/FI filter] [/FO format] [/NH] /S system 指定连接到的远程系统。 /U [domain\\]user 指定应该在哪个用户上下文执行这个命令。 /P [password] 为提供的用户上下文指定密码。如果省略, 则提示输入。 /M [module] 列出当前使用所给 exe/dll 名称的所有任务。 如果没有指定模块名称，显示所有加载的模块。 /SVC 显示每个进程中主持的服务。 /APPS 显示 Microsoft Store 应用及其关联的进程。 /V 显示详细任务信息。 /FI filter 显示一系列符合筛选器 指定条件的任务。 /FO format 指定输出格式。 有效值: \u0026quot;TABLE\u0026quot;、\u0026quot;LIST\u0026quot;、\u0026quot;CSV\u0026quot;。 /NH 指定列标题不应该 在输出中显示。 只对 \u0026quot;TABLE\u0026quot; 和 \u0026quot;CSV\u0026quot; 格式有效。  24.taskkill TASKKILL [/S system [/U username [/P [password]]]] { [/FI filter] [/PID processid | /IM imagename] } [/T] [/F] /S system 指定要连接的远程系统。 /U [domain\\]user 指定应该在哪个用户上下文执行这个命令。 /P [password] 为提供的用户上下文指定密码。如果忽略，提示 输入。 /FI filter 应用筛选器以选择一组任务。 允许使用 \u0026quot;*\u0026quot;。例如，映像名称 eq acme* /PID processid 指定要终止的进程的 PID。 使用 TaskList 取得 PID。 /IM imagename 指定要终止的进程的映像名称。通配符 '*'可用来 指定所有任务或映像名称。 /T 终止指定的进程和由它启用的子进程。 /F 指定强制终止进程。   taskkill /im studentmain.exe /f 退出学校机房监控\n  taskkill /pid 200 退出pid值为200的程序\n 25.telnet telnet IP 端口 以多少端口连接目标主机telnet服务 telnet 192.168.1.5 3350 quit 退出客户端 o IP 44 连接ip主机以44端口 c IP 关闭 open : 使用 openhostname 可以建立到主机的 Telnet 连接。 close : 使用命令 close 命令可以关闭现有的 Telnet 连接。 display : 使用 display 命令可以查看 Telnet 客户端的当前设置。 send : 使用 send 命令可以向 Telnet 服务器发送命令。支持以下命令： ao : 放弃输出命令。 ayt : “Are you there”命令。 esc : 发送当前的转义字符。 ip : 中断进程命令。 synch : 执行 Telnet 同步操作。 brk : 发送信号。 上表所列命令以外的其他命令都将以字符串的形式发送至 Telnet 服务器。例如， sendabcd 将发送字符串 abcd 至 Telnet 服务器，这样，Telnet 会话窗口 中将出现该字符串。 quit ：使用 quit 命令可以退出 Telnet 客户端。  26.FTP 命令格式：ftp [-v][-d][-i][-n][-g][-s:filename][-a][-w:windowsize][computer] -v 不显示远程服务器响应 -n 禁止第一次连接的时候自动登陆 -i 在多个文件传输期间关闭交互提示 -d 允许调试、显示客户机和服务器之间传递的全部ftp命令 -g 不允许使用文件名通配符，文件名通配符的意思是说允许在本地文件以及路径名中使用通配字符 -s:filename 指定包含ftp命令的文本文件。在ftp命令启动后将自动运行这些命令。在加的参数里不能有空格。 -a 绑定数据连接时，使用任何的本地端口 -w:windowsize 忽略默认的4096传输缓冲区 computer 指定要连接的远程计算机的ip地址  27.tftp | ftp 1) ? 说明：显示ftp命令的说明。后面可以加参数，是加需要解释的命令名，不加则显示包含所有命令列表。 2) append 说明：使用当前文件类型设置，将本地文件附加到远程计算机中。大概格式是 append local-file [remote-file] 其中local-file是说指定要添加的本地文件。 remote-file是说指定要将local-file附加到远程计算机文件，要是省了这个，则是使用本地文件名做远程文件名。 3)ascii 说明:默认情况下，将文件传输类型设置为ASCII 4)bell 说明：响玲开关，意思是文件传输完成后是否有玲声提醒。默认是关闭的。 5)binary 说明：将文件传输类型设置为二进制。 6)bye 说明:结束和远程计算机的ftp会话，也就是安全断开，退出ftp. 7)cd 说明：更改远程计算机上的工作目录。如cd data 其中data是要进入的远程计算机的目录。 8)close 说明:结束与远程服务器的ftp会话，并返回命令解释程序。 9)dir 说明:显示远程的文件以及子目录列表。如dir data local-file 其中data是指定要查看列表的目录，没指定的话就是当前目录。local-file是指定要保存列表的本地文件，不指定的话就在屏幕输出。 10)debug 说明：调试开关，打开的时候打印每个发送到远程计算机的命令，命令前有——\u0026gt; 默认情况是关闭的。 1)disconnnect 说明：与远程计算机断开连接，但还保持着ftp命令提示符。 12)get 说明：使用当前文件传输类型，把远程的文件拷贝到本地计算机上。 如get remote-file local-file remote-file是指定要复制的文件，local-file是指定本地计算机上的文件名， 没有指定的话则个remote-file同名。 13)glob 说明：文件名通配开关 14)hash 说明：转换每个传输数据快的散列标记打印(#).数据快的大小是2048字节。默认情况下是关闭的， 15)help 说明：显示ftp命令的解释，如help commmand 其中command就是你要解释的命令，如果不加command这个参数的话就会显示所有命令的列表 16)! 说明:这个命令差点忘记了功能是在本地计算机上运行指定命令。如! command 其中command就是你要运行的命令，如果不加command这个参数的 ，则显示本地命令提示， 这时你输入exit命令就能返回到ftp了。 17)lcd 说明:更改本地计算机的本地目录,在默认的时候是启动ftp的目录.这个不要觉得没用啊，在你使用ftp的时候为了传递文件不是常改变本地和远程计算机的目录吗? 如lcd [directory] 其中[directory]是指定要进入的本地计算机的目录,如果你不加这个参数,就会显示出本地计算机的工作目录. 18)literal 说明:向远程ftp服务器发送协商参数,报告. 如lireral argument [...] 其中argument是指定要发送给远程服务器的协商参数。 19)ls 说明:显示远程目录的文件和字目录. 如ls remote-directory local-file 其中remote-directory是指要查看的列表的目录,不指定的话显示的是当前 工作目录。local-file是指定要保存列表的本地文件.不指定的话是在屏幕上输出. 20)mdelete 说明:删除远程计算机上的文件.如mdelete remote-file ... remote-file肯定是要删的文件啊，可以删除多个. 21)mdir 说明:显示远程目录的文件和子目录列表,他允许指定多个文件. 如mdir remote-file ... local-file 参数我想大家应该明白什么意思吧?不明白就看看前面的类似命令吧. 22)mget 说明:使用当前文件传输类型将多个远程文件复制到本地计算机. 如mget remote-files ... 其实remote-files可以指定多个，他就是指定要复制到本地计算机的远程文件. 23)mkdir 说明:创建远程目录. 如mkdir directory 这个命令和nt下的命令提示符中的md directory一样 不多说了. 24)mls 说明:显示远程目录的文件和目录简表 如mls remote-file ... local-file 其中remote-file这个参数是必须要加的，’’-’’是使用远程计算机的当前工作目录. 25)mput 说明:使用当前文件传输类型,将本地文件复制到远程计算机. 如mput local-files ... 26)open 说明:连接到指定ftp服务器上， 如open computer port 其中computer一般是远程计算机的ip地址,port 不用说就是指定端口了。 27)prompt 说明:转换提示,在多个文件传输的时候,ftp提示可以有选择的检索或保存文件 ，如果关闭提示,则mget和mput命令传输所有文件,在默认情况下是打开的. 28)put 说明:使用当前文件传输类型将本地文件复制到远程计算机中， 如put local-file remote-file 其中local-file是指定要复制的本地文件， remote-file是指定要复制的远程计算机上的文件名，不指定的话是和本地计 算机上的文件名同名. 29)pwd 说明:显示远程呢感计算机上的当前目录. 30)quit 说明:结束与远程计算机的ftp会话,并退出ftp. 31)quote 说明:向远程ftp服务器发送协议,报告.期待ftp单码应答,这个命令的功能 和literal相同. 32)recv 说明:使用当前文件传输类型将远程文件复制到本地计算机,他与get命令作用 相同。 33)remotehelp 说明:显示远程命令的帮助.这个命令的用法和help,!一样可以参考他的用法. 34)rename 明:更改远程计算机上的文件名。 这个命令和nt的命令提示符的ren一样，如rename filename newfilename 35)rmdir 说明:删除远程目录. 这个命令和nt的命令提示符的rm一样，如rmdir directory 36)send 说明:使用当前文件传输类型将本地文件复制到远程计算机.send和put命令的 功能一样。 如send local-file remote-file 37)status 说明:显示ftp连接和转换的当前状态 38)trace 说明:转换报文跟踪,运行ftp的命令时,trace将显示没个报文的理由。 39)type 说明:设置或显示文件传输类型. 如type [type-name] 其中type-name 的意思是文件传输的类型，默认是ASCII,没加这个参数就是 显示当前的传输类型. 40)user 说明:指定连接到远程计算机的用户. 如user user-name [passwd] [account] 其中user-name不用说都是用来登陆计算机的用户名了， passwd是指定user-name的密码,不指定的话ftp会提示输入密码 account是指定用来登陆计算机的帐号,如不指定,ftp会提示输入帐号. 41)verbose 说明:转换冗余模式。这里如果打开,会显示所有ftp响应,文件传输结束的时候 会显示传输的效率和统计信息,默认的情况是打开的!  28.ping 用法: ping [-t] [-a] [-n count] [-l size] [-f] [-i TTL] [-v TOS] [-r count] [-s count] [[-j host-list] | [-k host-list]] [-w timeout] [-R] [-S srcaddr] [-c compartment] [-p] [-4] [-6] target_name 选项: -t Ping 指定的主机，直到停止。 若要查看统计信息并继续操作，请键入 Ctrl+Break； 若要停止，请键入 Ctrl+C。 -a 将地址解析为主机名。 -n count 要发送的回显请求数。 -l size 发送缓冲区大小。 -f 在数据包中设置“不分段”标记(仅适用于 IPv4)。 -i TTL 生存时间。 -v TOS 服务类型(仅适用于 IPv4。该设置已被弃用， 对 IP 标头中的服务类型字段没有任何 影响)。 -r count 记录计数跃点的路由(仅适用于 IPv4)。 -s count 计数跃点的时间戳(仅适用于 IPv4)。 -j host-list 与主机列表一起使用的松散源路由(仅适用于 IPv4)。 -k host-list 与主机列表一起使用的严格源路由(仅适用于 IPv4)。 -w timeout 等待每次回复的超时时间(毫秒)。 -R 同样使用路由标头测试反向路由(仅适用于 IPv6)。 根据 RFC 5095，已弃用此路由标头。 如果使用此标头，某些系统可能丢弃 回显请求。 -S srcaddr 要使用的源地址。 -c compartment 路由隔离舱标识符。 -p Ping Hyper-V 网络虚拟化提供程序地址。 -4 强制使用 IPv4。 -6 强制使用 IPv6。   一些默认TTL对应的系统（可以修改）\n 1.TTL=32 Windows 9x/Me 2.TTL=64 LINUX 3.TTL=128 Windows 200x/XP 4.TTL=255 Unix TTL  29.ipconfig  /? 显示此帮助消息 /all 显示完整配置信息。 /release 释放指定适配器的 IPv4 地址。 /release6 释放指定适配器的 IPv6 地址。 /renew 更新指定适配器的 IPv4 地址。 /renew6 更新指定适配器的 IPv6 地址。 /flushdns 清除 DNS 解析程序缓存。 /registerdns 刷新所有 DHCP 租用并重新注册 DNS 名称 /displaydns 显示 DNS 解析程序缓存的内容。 /showclassid 显示适配器允许的所有 DHCP 类 ID。 /setclassid 修改 DHCP 类 ID。 /showclassid6 显示适配器允许的所有 IPv6 DHCP 类 ID。 /setclassid6 修改 IPv6 DHCP 类 ID。   ipconfig /all\n  ipconfig /release\n  ipconfig renew\n 30.getmac GETMAC [/S system [/U username [/P [password]]]] [/FO format] [/NH] [/V] 描述: 此工具使管理员能够显示系统上网络适配器的 MAC 地址。 参数列表: /S system 指定要连接的远程系统。 /U [domain\\]user 指定用户上下文，命令在此上下文执行。 /P [password] 指定给定用户上下文密码。如果省略则 提示输入。 /FO format 指定输出显示的格式。 有效值: \u0026quot;TABLE\u0026quot;、\u0026quot;LIST\u0026quot;、\u0026quot;CSV\u0026quot;。 /NH 指定在输出中不显示“列标题”。 只对 TABLE 和 CSV 格式有效。 /V 指定显示详细输出。 /? 显示此帮助消息。   getmac /v\n 31.netstat NETSTAT [-a] [-b] [-e] [-f] [-n] [-o] [-p proto] [-r] [-s] [-x] [-t] [interval] -a 显示所有连接和侦听端口。 -b 显示在创建每个连接或侦听端口时涉及的 可执行程序。在某些情况下，已知可执行程序承载 多个独立的组件，这些情况下， 显示创建连接或侦听端口时 涉及的组件序列。在此情况下，可执行程序的 名称位于底部 [] 中，它调用的组件位于顶部， 直至达到 TCP/IP。注意，此选项 可能很耗时，并且在你没有足够 权限时可能失败。 -e 显示以太网统计信息。此选项可以与 -s 选项 结合使用。 -f 显示外部地址的完全限定 域名(FQDN)。 -n 以数字形式显示地址和端口号。 -o 显示拥有的与每个连接关联的进程 ID。 -p proto 显示 proto 指定的协议的连接；proto 可以是下列任何一个: TCP、UDP、TCPv6 或 UDPv6。如果与 -s 选项一起用来显示每个协议的统计信息，proto 可以是下列任何一个: IP、IPv6、ICMP、ICMPv6、TCP、TCPv6、UDP 或 UDPv6。 -q 显示所有连接、侦听端口和绑定的 非侦听 TCP 端口。绑定的非侦听端口 不一定与活动连接相关联。 -r 显示路由表。 -s 显示每个协议的统计信息。默认情况下， 显示 IP、IPv6、ICMP、ICMPv6、TCP、TCPv6、UDP 和 UDPv6 的统计信息; -p 选项可用于指定默认的子网。 -t 显示当前连接卸载状态。 -x 显示 NetworkDirect 连接、侦听器和共享 终结点。 -y 显示所有连接的 TCP 连接模板。 无法与其他选项结合使用。 interval 重新显示选定的统计信息，各个显示间暂停的 间隔秒数。按 CTRL+C 停止重新显示 统计信息。如果省略，则 netstat 将打印当前的 配置信息一次。   netstat -ano\n  netstat -a\n  netstat -o\n 32.netsh 文本配置网络 netsh -c interface ip dump \u0026gt;c:interface.txt 导出 netsh -f c:interface.txt 导入 1、修改IP地址addr和子网掩码mask： netsh interface ip set address name=\u0026quot;本地连接\u0026quot; source=static addr=192.168.0.106 mask=255.255.255.0 更改ip把192.168.0.106改成想要改的ip mask是子网掩码可以计算有多少子网络 2、修改默认网关gateway netsh interface ip set address name=\u0026quot;本地连接\u0026quot; gateway=192.168.0.1 gwmetric=0 把192.168.0.1改成想要改的默认网关 3、修改首选(PRIMARY)的DNS netsh interface ip set dns name=\u0026quot;本地连接\u0026quot; source=static addr=202.96.128.66 register=PRIMARY 把202.96.128.66改成首选dns 开启防火墙 netsh firewall set opmode mode = enable netsh firewall set opmode mode = disable  33.arp  -a 通过询问当前协议数据，显示当前 ARP 项。 如果指定 inet_addr，则只显示指定计算机 的 IP 地址和物理地址。如果不止一个网络 接口使用 ARP，则显示每个 ARP 表的项。 -g 与 -a 相同。 -v 在详细模式下显示当前 ARP 项。所有无效项 和环回接口上的项都将显示。 inet_addr 指定 Internet 地址。 -N if_addr 显示 if_addr 指定的网络接口的 ARP 项。 -d 删除 inet_addr 指定的主机。inet_addr 可 以是通配符 *，以删除所有主机。 -s 添加主机并且将 Internet 地址 inet_addr 与物理地址 eth_addr 相关联。物理地址是用 连字符分隔的 6 个十六进制字节。该项是永久的。 eth_addr 指定物理地址。 if_addr 如果存在，此项指定地址转换表应修改的接口 的 Internet 地址。如果不存在，则使用第一 个适用的接口。 示例: \u0026gt; arp -s 157.55.85.212 00-aa-00-62-c6-09.... 添加静态项。 \u0026gt; arp -a .... 显示 ARP 表。  34.net config [SERVER | WORKSTATION]  35.net continue service 重新挂起服务 service :ftp talent so on.  36.net file 显示共享文件名 37.net localgroup net localgroup administrators srpihot /add 加入管理组/domain 在当前主域控制器执行操作 net localgroup administrators srpihot /del 删除管理组 net localgroup administrators 显示管理组用户  38.net help 39.net pause service 暂停服务 service :ftp talent so on.  40.net print 控制打印服务 net print \\\\computername\\sharename /hold 等待作业 与作业号连用 net print \\\\ srpihot 220 /hold /release 释放保留 /delete删除  41.net share 共享信息  sharename=drive:path [/GRANT:user,[READ | CHANGE | FULL]] [/USERS:number | /UNLIMITED] [/REMARK:\u0026quot;text\u0026quot;] [/CACHE:Manual | Documents| Programs | BranchCache | None] sharename [/USERS:number | /UNLIMITED] [/REMARK:\u0026quot;text\u0026quot;] [/CACHE:Manual | Documents | Programs | BranchCache | None] {sharename | devicename | drive:path} /DELETE sharename \\\\computername /DELETE NET SHARE 使服务器的资源让网络用户可用。使用时如果没有选项，它列出有关计算机 上所有共享资源的信息。对于每种资源，Windows 报告设备名或路径名以及与之相关的 描述性注释。 sharename 为共享资源的网络名称。键入具有共享名称的 NET SHARE 只显示 有关该共享的信息。 drive:path 指定共享目录的绝对路径。 /GRANT:user,perm 利用安全描述符创建共享，安全描述符为特定用户提供要求的权 限。可以多次使用该选项以为多个用户提供共享权限。 /USERS:number 设置可以同时访问共享资源的用户的最大数量。 /UNLIMITED 指定无限数量的用户可以同时访问共享资源 /REMARK:\u0026quot;text\u0026quot; 添加关于资源的描述性注释。将文本用引号括起来。 devicename 为通过共享名称共享的一台或多台打印机(LPT1: 至 LPT9:)。 /DELETE 终止共享资源。 /CACHE:Manual 启用手动客户端缓存来自该共享的程序和文档 /CACHE:Documents 启用自动缓存来自该共享的文档 /CACHE:Programs 启用自动缓存来自该共享的程序和文档 /CACHE:BranchCache 使用从此共享启用的 BranchCache 手动缓存文档 /CACHE:None 禁用缓存该共享 net share srpihot=c:\\windows /remark:\u0026quot;注释\u0026quot;  42.net start service 开始服务 service 可以包括以下服务之一: BROWSER DHCP CLIENT EVENTLOG FILE REPLICATION NETLOGON PLUG AND PLAY REMOTE ACCESS CONNECTION MANAGER ROUTING AND REMOTE ACCESS RPCSS SCHEDULE SERVER SPOOLER TCP/IP NETBIOS HELPER UPS WORKSTATION  43.net stop service 停止服务 同42  44.net use 控制共享资源 [devicename | *] [\\\\computername\\sharename[\\volume] [password | *]] [/USER:[domainname\\]username] [/USER:[dotted domain name\\]username] [/USER:[username@dotted domain name] [/SMARTCARD] [/SAVECRED] [/REQUIREINTEGRITY] [/REQUIREPRIVACY] [[/DELETE] | [/PERSISTENT:{YES | NO}]] NET USE {devicename | *} [password | *] /HOME NET USE [/PERSISTENT:{YES | NO}] NET USE 将计算机连接到共享资源 或将计算机与共享资源断开连接。使用时如果没有选项，它会列出 计算机的连接。 devicename 分配一个名称以连接到资源，或指定 要断开连接的设备。有两种 设备名称: 磁盘驱动器(D: 至 Z:)和打印机 (LPT1: 至 LPT3:)。键入星号而不是 特定设备名称以分配下一个可用 设备名称。 \\\\computername 为控制共享资源的计算机 的名称。如果计算机名包含空白字符， 则用引号(\u0026quot; \u0026quot;)将双反斜杠(\\\\)和计算机名 括起来。计算机名的长度可以为 1 至 15 个字符。 \\sharename 为共享资源的网络名称。 \\volume 指定服务器上的 NetWare 卷。必须已安装并正在运行 Netware 客户端服务(Windows Workstations) 或 Netware 网关服务(Windows Server) 才能连接到 NetWare 服务器。 password 为访问共享资源所需的密码。 * 产生密码提示。在密码提示处 键入密码时不显示密码。 /USER 指定进行连接的另一个 用户名。 domainname 指定其他域。如果忽略域， 则使用当前登录的域。 username 指定登录所使用的用户名。 /SMARTCARD 指定连接将使用智能卡上 的凭据。 /SAVECRED 指定要保存用户名和密码。 该开关将被忽略，除非命令提示输入用户名 和密码。 /HOME 将用户连接到他们的主目录。 /DELETE 取消网络连接并 从持续连接列表中删除该连接。 /REQUIREINTEGRITY 需要签名的共享连接。如果提供程序 不支持签名连接，则操作将失败。 /REQUIREPRIVACY 需要加密的共享连接。如果提供程序 不支持加密连接，则操作将失败。 /PERSISTENT 控制持续网络连接的使用。 默认为上次使用的设置。 YES 进行连接时将它们保存，并在下次 登录时将它们恢复。 NO 不保存正在进行的连接或随后的 连接；下次登录时将恢复 现有连接。使用 /DELETE 开关删除 持续连接。   net use c:\\windows \\192.168.1.2\\share 把本地c盘windows分享给192.168.1.2上的share文件夹下\n  net use lpt1: \\192.168.1.2\\share 把打印机分享\n  net use c:\\windows \\192.168.1.2\\share /user:srpihot :yes 把本地c盘windows分享给192.168.1.2上的share文件夹下 用户是srpihot 并且下次登陆不考虑更改\n 45.net user 添加用户 [username [password | *] [options]] [/DOMAIN] username {password | *} /ADD [options] [/DOMAIN] username [/DELETE] [/DOMAIN] username [/TIMES:{times | ALL}] username [/ACTIVE: {YES | NO}] NET USER 将创建并修改计算机上的用户帐户。在不使用命令开关的情况下， 将列出计算机的用户帐户。用户帐户信息存储在用户帐户数据库中。 username 为可添加、删除、修改或查看的用户帐户的名称。用户帐户名称 最多可以有 20 个字符。 password 指定或更改用户帐户的密码。密码的长度必须符合 NET ACCOUNTS 命令的 /MINPWLEN 选项所设置的最小长度。 最多可以有 14 个字符。 * 生成密码提示。在密码提示下键入密码时，将不会显示密码。 /DOMAIN 在当前域的域控制器上执行此操作。 /ADD 向用户帐户数据库添加用户帐户。 /DELETE 从用户帐户数据库删除用户帐户。 选项 如下所示: /ACTIVE:{YES | NO} 激活或取消激活帐户。如果该帐户处于非激 活状态， 用户将无法访问服务器。默认设置为“YES”。 /COMMENT:\u0026quot;text\u0026quot; 提供有关用户帐户的描述性注释。请将文本用引号 括起来。 /COUNTRYCODE:nnn 使用操作系统国家/地区代码执行指定的语言文件， 以显示用户帮助和错误消息。值 0 表示使用默认 的国家/地区代码。 /EXPIRES:{date | NEVER} 如果设置了日期，可导致帐户过期。 NEVER 将帐户设置为无时间限制。 过期日期采用格式 mm/dd/yy(yy)。 月份可以是一个数字、完整字母拼写， 或使用三个字母的缩写。年份可以使用两位数字 或四位数字。使用斜线(/)(不留空格) 将日期的各个部分隔开。 /FULLNAME:\u0026quot;name\u0026quot; 用户的全名(而不是用户名)。请将该名称用引号 括起来。 /HOMEDIR:pathname 用户的主目录设置路径。该路径必须存在。 /PASSWORDCHG:{YES | NO} 指定用户是否可以更改其密码。默认设置 为“YES”。 /PASSWORDREQ:{YES | NO} 指定用户帐户是否必须拥有密码。 默认设置为“YES”。 /LOGONPASSWORDCHG:{YES|NO} 指定用户是否应在下次登录时更改其密码。 默认设置为“NO”。 /PROFILEPATH[:path] 为用户登录配置文件设置路径。 /SCRIPTPATH:pathname 用户登录脚本的位置。 /TIMES:{times | ALL} 登录小时数。TIMES 表示为 day[-day][,day[-day]],time[-time][,time [-time]]，增量限制为 1 小时。 日期可以是完整拼写，也可以是缩写。 小时可以是 12 或 24 小时表示法。对于 12 小时表示法，请使用 am、pm、a.m. 或 p.m。ALL 表示用户始终可以登录， 空白值表示用户始终不能登录。使用逗号将日期和时 间隔开，使用分号将多个日期和时间隔开。 /USERCOMMENT:\u0026quot;text\u0026quot; 允许管理员添加或更改帐户的用户注释。 /WORKSTATIONS:{computername[,...] | *} 列出用户可用于登录到网络的计算机，最多为八台。 如果 /WORKSTATIONS 没有列表，或其列表为 *， 则用户可以通过任何计算机登录到网络。   net user xiaojie 1314521 /add\n  net user srpihot /del\n 46.net view 查看当前域里的共享资源及主机名 [\\\\computername [/CACHE] | [/ALL] | /DOMAIN[:domainname]] NET VIEW 显示计算机上共享的资源列表。 使用时如果没有选项，它显示当前域或网络中的 计算机列表。 \\\\computername 要查看的共享资源所在的 计算机。 /DOMAIN:domainname 指定要查看其可用计算机的域。 如果忽略 domainname， 则将显示局域网中的 所有域。 /CACHE 显示指定计算机上资源的脱机 客户端缓存设置 /ALL 显示包括 $ 共享在内的所有共享  47.rar 需要添加path变量 用法: rar \u0026lt;command\u0026gt; -\u0026lt;switch 1\u0026gt; -\u0026lt;switch N\u0026gt; \u0026lt;archive\u0026gt; \u0026lt;files...\u0026gt; \u0026lt;@listfiles...\u0026gt; \u0026lt;path_to_extract\\\u0026gt; \u0026lt;Commands\u0026gt; a 添加文件到压缩文档 c 添加添加压缩文档注释 ch 更改压缩文档参数 cw 写入压缩文档注释到文件 d 从压缩文档删除文件 e 提取文件不带压缩路径 f 刷新压缩文档中的文件 i[par]=\u0026lt;str\u0026gt; 在压缩文档里查找字符串 k 锁定压缩文档 l[t[a],b] 列出压缩文档内容 [technical[all], bare] m[f] 移动到压缩文档 [仅文件] p 打印文件到 stdout r 修复压缩文档 rc 重新构建丢失的卷 rn 重命名归档的文件 rr[N] 添加数据恢复记录 rv[N] 创建恢复卷 s[name|-] 转换压缩文档到或从 SFX t 测试压缩文档的文件 u 更新压缩文档中的文件 v[t[a],b] 详细列出压缩文档的内容 [technical[all],bare] x 解压文件带完整路径 \u0026lt;Switches\u0026gt; - 停止参数扫描 @[+] 禁用 [enable] 文件列表 ac 压缩或解压后清除压缩文档属性 ad 扩展压缩文档名称到目标路径 ag[format] 使用当前日期生成压缩文档名称 ai 忽略文件属性 ao 添加文件带有压缩文档属性集 ap\u0026lt;path\u0026gt; 设置压缩文档内部的路径 as 同步压缩文档内容 c- 禁用内容显示 cfg- 禁用读取配置 cl 转换名称为小写 cu 转换名称为大写 df 压缩后删除文件 dh 打开共享的文件 dr 删除文件到回收站 ds 为固实压缩禁用名称排序 dw 压缩后删除文件 e[+]\u0026lt;attr\u0026gt; 设置文件排除和包含属性 ed 不要添加空目录 en 不要放置 'end of archive' 块 ep 从名称里排除路径 ep1 从名称里排除根目录 ep2 扩展路径为完整路径 ep3 扩展路径为完整路径包括驱动器盘符 f 刷新文件 hp[password] 加密文件数据及文件头 ht[b|c] 设置哈希类型 [BLAKE2,CRC32] 用于文件校验和 id[c,d,p,q] 禁用消息 ieml[addr] 通过电邮发送压缩文档 ierr 发送所有压缩文档到 stderr ilog[name] 记录错误日志到文件 inul 禁用所有消息 ioff[n] 完成一个操作后关闭电脑 isnd 禁用声音 iver 仅显示版本号 k 锁定压缩文档 kb 保留损坏的已解压文件 log[f][=name] 将名称写入日志文件 m\u0026lt;0..5\u0026gt; 设置压缩等级 (0-store...3-default...5-maximal) ma[4|5] 指定压缩格式的版本 mc\u0026lt;par\u0026gt; 设置高级压缩参数 md\u0026lt;n\u0026gt;[k,m,g] 词典大小单位为 KB, MB 或 GB ms[ext;ext] 指定要存储的文件类型 mt\u0026lt;threads\u0026gt; 设置线程数 n\u0026lt;file\u0026gt; 额外管理器包含文件 n@ 从 stdin 读取额外的过滤器掩码 n@\u0026lt;list\u0026gt; 从列表文件读取额外的过滤器掩码 o[+|-] 设置覆盖模式 oc 设置 NTFS 压缩属性 oh 保存硬链接为链接而不是文件 oi[0-4][:min] 将相同的文件保存为参考 ol[a] 将符号链接处理为链接 [absolute paths] oni 允许潜在的不兼容名称 or 自动重命名文件 os 保存 NTFS 流 ow 保存或恢复文件拥有者和组 p[password] 设置密码 p- 不要查询密码 qo[-|+] 添加快速打开信息 [none|force] r0 递归子目录仅用于通配符名称 ri\u0026lt;P\u0026gt;[:\u0026lt;S\u0026gt;] 设置优先级 (0-默认,1-最小.15-最大) 和休眠时间单位为 ms rr[N] 添加数据恢复记录 rv[N] 创建恢复卷 s[\u0026lt;N\u0026gt;,v[-],e] 创建固实压缩文档 s- 禁用固实压缩文档 sc\u0026lt;chr\u0026gt;[obj] 指定字符集 sfx[name] 创建 SFX 压缩文档 si[name] 从标准输入读取数据 (stdin) sl\u0026lt;size\u0026gt; 处理小于指定大小的文件 sm\u0026lt;size\u0026gt; 处理大于指定大小的文件 t 压缩后测试 ta\u0026lt;date\u0026gt; 处理在 \u0026lt;date\u0026gt; 之后修改的文件日期格式为 YYYYMMDDHHMMSS tb\u0026lt;date\u0026gt; 处理在 \u0026lt;date\u0026gt; 之前修改的文件日期格式为 YYYYMMDDHHMMSS tk 保留原来的压缩时间 tl 设置压缩时间为最近的文件 tn\u0026lt;time\u0026gt; 处理比 \u0026lt;time\u0026gt; 更新的文件 to\u0026lt;time\u0026gt; 处理比 \u0026lt;time\u0026gt; 更老的文件 ts[m|c|a] 复制或恢复文件时间（修改，创建，访问） u 更新文件 v\u0026lt;size\u0026gt;[k,b] 创建卷大小为=\u0026lt;size\u0026gt;*1000 [*1024, *1] vd 创建卷之前删除磁盘内容 ver[n] 文件版本控制 vn 使用旧式的卷命名规则 vp 每个卷之前暂停 w\u0026lt;path\u0026gt; 指定工作目录 x\u0026lt;file\u0026gt; 排除特定文件 x@ 读取文件名以便从 stdin 排除 x@\u0026lt;list\u0026gt; 排除在特定列表文件里列出的文件 y 对所有问题回答是 z[file] 从文件读取压缩文档注释   rar a 1 12 将12文件压缩成1.rar\n  rar e 1.rar 解压1.rar\n  rar a p 1 12 将12文件压缩成1.rar，并设置密码。\n ","permalink":"https://srpihot.github.io/post/dos-cmd%E6%95%B4%E7%90%86/","summary":"DOS:  内部命令：  1.dir /p 分屏显示 /w 一行五个分开显示 /s 显示当前盘符下所有目录 /a : h 显示隐藏目录 : s 显示系统文件 : d 只显示目录 : -d 只显示文件 : r 显示只读文件 : -r 显示非只读文件 /o : n 按照名字排序 : d 按照时间日期排序 : s 按照文件大小排序 : g 按照目录在前排序   tips:\n 查找某个目录下的srpihot.txt dir /s srpihot.txt 显示以.txt后缀的文件 dir *.txt   2.cd cd d: 进入到d盘 cd srpihot 进入srpihot目录 cd .. 返回到上一级目录 cd nul \u0026gt;srpihot.txt 创建新文件  3.","title":"DOS \u0026\u0026 CMD整理"},{"content":"#1 写在前面 从最开始折腾博客到现在，一晃已经过去6年了。16年高二的时候，每次遇到放假的时候，便会回到家打开那台和搬砖一样厚，2G内存的华硕笔记本。那个时候，不懂前端开发，不懂后端开发，甚至连html与css是什么也不知道。跟着百度搜的教程，一步一步在github pages上搭建博客模板。博客没有写几篇，博客主题换的倒是一次比一次勤。在此期间，经历了高考，大学摸鱼生活，考研生活。博客也从github pages、到独立服务器搭建静态页面、到WordPress到现在又回到了github pages。\n 忙活了几年，最后还是选择了安稳。\n #2 目前的博客搭建方式 目前采用的方式是github pages + Hugo ，图库选择阿里云OSS + PicGO，曾经试过jeklly + github pages、WordPress、以及next。先说以前用过的优点吧，next与jeklly都是老牌的静态页面生成工具，提供非常丰富的模板主题供以选择，WordPress自定义的范围更大，可以加广告联盟进行变现等等，SEO优化什么的教程网上也是一大把。但缺点也十分的明显，next与jeklly的渲染的速度太慢了（虽说目前也没有写博客写到那种几百篇的量），WordPress需要服务器，用三大云的学生机搭建了一年体验了下，服务器的性能与带宽真的是捉襟见肘（其实日常使用也完全够用），外加这次出了一个问题（服务器硬盘满了，mysql无法启动，WordPress上的文章完全不能导出，恢复idb文件也失败了。最后解决方案是，重置服务器了，几十篇博客gg。）。最后综合考虑使用github pages + hugo。\n没考虑gitee pages是因为gitee pages自定义域名需要刀乐。考虑hugo是因为真的很快（有点离谱）。但hugo缺点是官网的模板，文档水平参差不齐，国内介绍hugo的文章也是千篇一律，官方文档也没有中文版本，因此对于新手的难度还是蛮大的。\n 后面会写一篇关于HUGO搭建博客的博文吧。\n 至于不选择，简书、CSDN、博客园等网站作为个人博客，主要还是考虑到不支持自定义域名。\n#3 为什么会写博客 我觉得最重要的就是想提升自己的写作能力以及语言逻辑思维能力，自己语言逻辑一直是非常奇葩的。\n其次，就是尝试学会输出，平时学习新技术的时候，都是大量输入，缺乏输出。\n最后，坚持记录，把最小的事情坚持做到最好。\n 路漫漫其修远兮，吾将上下而求索。\n ","permalink":"https://srpihot.github.io/post/new-start/","summary":"#1 写在前面 从最开始折腾博客到现在，一晃已经过去6年了。16年高二的时候，每次遇到放假的时候，便会回到家打开那台和搬砖一样厚，2G内存的华硕笔记本。那个时候，不懂前端开发，不懂后端开发，甚至连html与css是什么也不知道。跟着百度搜的教程，一步一步在github pages上搭建博客模板。博客没有写几篇，博客主题换的倒是一次比一次勤。在此期间，经历了高考，大学摸鱼生活，考研生活。博客也从github pages、到独立服务器搭建静态页面、到WordPress到现在又回到了github pages。\n 忙活了几年，最后还是选择了安稳。\n #2 目前的博客搭建方式 目前采用的方式是github pages + Hugo ，图库选择阿里云OSS + PicGO，曾经试过jeklly + github pages、WordPress、以及next。先说以前用过的优点吧，next与jeklly都是老牌的静态页面生成工具，提供非常丰富的模板主题供以选择，WordPress自定义的范围更大，可以加广告联盟进行变现等等，SEO优化什么的教程网上也是一大把。但缺点也十分的明显，next与jeklly的渲染的速度太慢了（虽说目前也没有写博客写到那种几百篇的量），WordPress需要服务器，用三大云的学生机搭建了一年体验了下，服务器的性能与带宽真的是捉襟见肘（其实日常使用也完全够用），外加这次出了一个问题（服务器硬盘满了，mysql无法启动，WordPress上的文章完全不能导出，恢复idb文件也失败了。最后解决方案是，重置服务器了，几十篇博客gg。）。最后综合考虑使用github pages + hugo。\n没考虑gitee pages是因为gitee pages自定义域名需要刀乐。考虑hugo是因为真的很快（有点离谱）。但hugo缺点是官网的模板，文档水平参差不齐，国内介绍hugo的文章也是千篇一律，官方文档也没有中文版本，因此对于新手的难度还是蛮大的。\n 后面会写一篇关于HUGO搭建博客的博文吧。\n 至于不选择，简书、CSDN、博客园等网站作为个人博客，主要还是考虑到不支持自定义域名。\n#3 为什么会写博客 我觉得最重要的就是想提升自己的写作能力以及语言逻辑思维能力，自己语言逻辑一直是非常奇葩的。\n其次，就是尝试学会输出，平时学习新技术的时候，都是大量输入，缺乏输出。\n最后，坚持记录，把最小的事情坚持做到最好。\n 路漫漫其修远兮，吾将上下而求索。\n ","title":"New Start-从博客搭建开始"}]